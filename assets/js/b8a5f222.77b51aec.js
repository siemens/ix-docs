"use strict";(self.webpackChunkix_documentation=self.webpackChunkix_documentation||[]).push([[3859],{9731:(e,n,t)=>{function r(e){const n=e.split("-").map(((e,n)=>0===n?e.toLowerCase():e.charAt(0).toUpperCase()+e.slice(1).toLowerCase())).join("");return n.charAt(0).toUpperCase()+n.slice(1)}function s(e,n=!1){if(!e)return e;return e[0].toUpperCase()+(n?e.slice(1):e.slice(1).toLowerCase())}t.d(n,{Z:()=>s,x:()=>r})},15561:(e,n,t)=>{t.d(n,{A:()=>c});var r=t(30758);const s="Button_k5HP",a="ButtonText_kD4P";var i=t(13526),o=t(86070);const c=(0,r.forwardRef)((({children:e,onClick:n,className:t},r)=>(0,o.jsx)("button",{className:(0,i.A)("all-unset",s,t),onClick:n,ref:r,children:(0,o.jsx)("div",{className:(0,i.A)(a,"ButtonText"),children:e})})))},21522:(e,n,t)=>{t.d(n,{D:()=>a,S:()=>i});var r=t(30758),s=t(86070);const a=(0,r.createContext)({currentTheme:"brand",isDarkColor:!0}),i=(0,r.forwardRef)((({children:e},n)=>{const{currentTheme:t,isDarkColor:i}=(0,r.useContext)(a),o=(0,r.useRef)(null);return(0,r.useImperativeHandle)(n,(()=>o.current)),(0,r.useEffect)((()=>{const e=o.current;e&&(e.setAttribute("data-ix-theme",t),e.setAttribute("data-ix-color-schema",i?"dark":"light"))}),[t,i]),(0,s.jsx)("div",{ref:o,children:e})}))},21809:(e,n,t)=>{t.d(n,{Ay:()=>f,wM:()=>g});var r=t(51168),s=t(16396),a=t(86447),i=t(99699),o=t(93514),c=t(30758),l=t(15561);const h="DropdownItem_L91h";var m=t(86070);const p="brand",d="classic";function u(e){return e.charAt(0).toUpperCase()+e.slice(1)}function g(){return(0,s.A)().siteConfig.customFields.withBrandTheme?p:d}function x(e){const{playgroundTheme:n,setPlaygroundTheme:t}=(0,o.A)(),r=(0,s.A)(),[g]=(0,c.useState)((()=>{const e=[d];return r.siteConfig.customFields.withBrandTheme&&e.push(p),e})),[x,f]=(0,c.useState)(null),y=u(n);return(0,c.useEffect)((()=>{e.onThemeChange?.(n)}),[n]),(0,m.jsxs)(m.Fragment,{children:[(0,m.jsxs)(l.A,{ref:f,className:"dropdown-button",children:[c.createElement("ix-icon",{name:a.iconDrawingDocument,size:"16"}),(0,m.jsx)("span",{className:"ButtonText",children:y}),c.createElement("ix-icon",{name:a.iconChevronDownSmall,size:"16"})]}),x&&(0,m.jsx)(i.$9,{trigger:x,children:g.map((e=>(0,m.jsx)(i.iz,{onClick:()=>t(e),className:h,checked:n===e,children:u(e)},e)))})]})}const f=e=>(0,m.jsx)(r.A,{children:()=>(0,m.jsx)(x,{...e})})},29059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>Re,contentTitle:()=>Ne,default:()=>Fe,frontMatter:()=>Oe,metadata:()=>r,toc:()=>Pe});const r=JSON.parse('{"id":"components/line-chart/index","title":"Line chart","description":"Line charts display data as a series of data points connected by straight line segments. Line charts are commonly used to visualize trends over time or compare two variables. We typically use line charts to visualize continuous data.","source":"@site/docs/components/line-chart/index.mdx","sourceDirName":"components/line-chart","slug":"/components/line-chart/","permalink":"/docs/components/line-chart/","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix-docs/tree/main/docs/components/line-chart/index.mdx","tags":[],"version":"current","frontMatter":{"doc-type":"banner","description":"Line charts display data as a series of data points connected by straight line segments. Line charts are commonly used to visualize trends over time or compare two variables. We typically use line charts to visualize continuous data.","title":"Line chart","deprecated":null},"sidebar":"components","previous":{"title":"Overview","permalink":"/docs/components/charts-overview/"},"next":{"title":"Bar chart","permalink":"/docs/components/bar-chart/"}}');var s=t(86070),a=t(86117),i=t(62970);function o(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-line-simple.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsLineSimple() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const data = {\n    weekdays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    value: [150, 230, 224, 218, 135, 147, 260],\n  };\n\n  const options: EChartsOption = {\n    xAxis: {\n      type: 'category',\n      data: data.weekdays,\n    },\n    yAxis: {\n      type: 'value',\n    },\n    series: [\n      {\n        data: data.value,\n        type: 'line',\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}function l(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}function m(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-line-simple.html',\n  styleUrls: ['./echarts-line-simple.css'],\n})\nexport default class EchartsLineSimple implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  data = {\n    weekdays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    value: [150, 230, 224, 218, 135, 147, 260],\n  };\n\n  value = 60;\n\n  options: EChartsOption = {\n    xAxis: {\n      type: 'category',\n      data: this.data.weekdays,\n    },\n    yAxis: {\n      type: 'value',\n    },\n    series: [\n      {\n        data: this.data.value,\n        type: 'line',\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}function d(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function g(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function x(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function f(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { NgxEchartsDirective, provideEchartsCore } from 'ngx-echarts';\n\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  standalone: true,\n  selector: 'app-example',\n  providers: [provideEchartsCore({ echarts })],\n  imports: [NgxEchartsDirective],\n  templateUrl: './echarts-line-simple.html',\n  styleUrls: ['./echarts-line-simple.css'],\n})\nexport default class EchartsLineSimple implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  data = {\n    weekdays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    value: [150, 230, 224, 218, 135, 147, 260],\n  };\n\n  value = 60;\n\n  options: EChartsOption = {\n    xAxis: {\n      type: 'category',\n      data: this.data.weekdays,\n    },\n    yAxis: {\n      type: 'value',\n    },\n    series: [\n      {\n        data: this.data.value,\n        type: 'line',\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function y(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}function v(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div echarts [options]="options" [theme]="theme" class="echarts"></div>\n'})})}function w(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}function j(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function C(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}function S(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.LineChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst data = {\n  weekdays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  value: [150, 230, 224, 218, 135, 147, 260],\n};\n\nconst value = 60;\n\nconst options = {\n  xAxis: {\n    type: 'category',\n    data: data.weekdays,\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      data: data.value,\n      type: 'line',\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-line-simple.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function A(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(S,{...e})}):S(e)}function E(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function b(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}function k(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts line simple example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-line-simple.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import { registerTheme } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const data = {\n        weekdays: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        value: [150, 230, 224, 218, 135, 147, 260],\n      };\n\n      const options = {\n        xAxis: {\n          type: 'category',\n          data: data.weekdays,\n        },\n        yAxis: {\n          type: 'value',\n        },\n        series: [\n          {\n            data: data.value,\n            type: 'line',\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function T(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}function _(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function L(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}function O(e){return(0,s.jsx)(i.A,{name:"echarts-line-simple",source:{react:{"echarts-line-simple.tsx":c,"echarts-line-simple.scoped.css":h},angular:{"echarts-line-simple.ts":p,"echarts-line-simple.html":u,"echarts-line-simple.css":x},angular_standalone:{"echarts-line-simple.ts":y,"echarts-line-simple.html":w,"echarts-line-simple.css":C},vue:{"echarts-line-simple.vue":A,"echarts-line-simple.css":b},html:{"echarts-line-simple.html":T,"echarts-line-simple.css":L}},files:{react:{"echarts-line-simple.tsx":"react/echarts-line-simple.tsx","echarts-line-simple.scoped.css":"react/echarts-line-simple.scoped.css"},angular:{"echarts-line-simple.ts":"angular/echarts-line-simple.ts","echarts-line-simple.html":"angular/echarts-line-simple.html","echarts-line-simple.css":"angular/echarts-line-simple.css"},angular_standalone:{"echarts-line-simple.ts":"angular_standalone/echarts-line-simple.ts","echarts-line-simple.html":"angular_standalone/echarts-line-simple.html","echarts-line-simple.css":"angular_standalone/echarts-line-simple.css"},vue:{"echarts-line-simple.vue":"vue/echarts-line-simple.vue","echarts-line-simple.css":"vue/echarts-line-simple.css"},html:{"echarts-line-simple.html":"html/echarts-line-simple.html","echarts-line-simple.css":"html/echarts-line-simple.css"}},height:e.height,onlyFramework:e.onlyFramework})}function N(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(O,{...e})}):O(e)}function R(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-line-multiple-y-axis.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption, SeriesOption } from 'echarts';\nimport { YAXisOption } from 'echarts/types/dist/shared';\n\nexport default function EchartsLineMultipleYAxis() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  const data = {\n    evaporation: months.map(() => (Math.random() * 100).toFixed(2)),\n    precipitation: months.map(() => (Math.random() * 200).toFixed(2)),\n    temperature: months.map(() => (Math.random() * 30).toFixed(2)),\n  };\n\n  const themeChartList = Array.from({ length: 17 }, (_, i) =>\n    getComputedCSSProperty(`chart-${i + 1}`)\n  );\n\n  function createYAxis(\n    name: string,\n    position: 'left' | 'right',\n    color: string,\n    formatter: string,\n    offset: number = 0\n  ): YAXisOption {\n    return {\n      type: 'value',\n      name: name,\n      position: position,\n      offset: offset,\n      alignTicks: true,\n      axisLabel: {\n        formatter: formatter,\n      },\n      axisTick: {\n        lineStyle: {\n          color: color,\n        },\n      },\n      axisLine: {\n        lineStyle: {\n          color: color,\n        },\n      },\n    };\n  }\n\n  function createSeries(\n    name: string,\n    yAxisIndex: number,\n    data: any,\n    color: string\n  ): SeriesOption {\n    return {\n      name: name,\n      type: 'line',\n      yAxisIndex: yAxisIndex,\n      data: data,\n      lineStyle: {\n        color: color,\n      },\n      itemStyle: {\n        color: color,\n      },\n    };\n  }\n\n  const options: EChartsOption = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: { type: 'cross' },\n    },\n    grid: {\n      right: '20%',\n    },\n    legend: {\n      show: true,\n      bottom: '0',\n      left: '0',\n    },\n    xAxis: [\n      {\n        type: 'category',\n        axisTick: { alignWithLabel: true },\n        data: months,\n      },\n    ],\n    yAxis: [\n      createYAxis('Evaporation', 'right', themeChartList[0], '{value} ml'),\n      createYAxis(\n        'Precipitation',\n        'right',\n        themeChartList[7],\n        '{value} ml',\n        80\n      ),\n      createYAxis('Temperature', 'left', themeChartList[12], '{value} \xb0C'),\n    ],\n    series: [\n      createSeries('Evaporation', 0, data.evaporation, themeChartList[0]),\n      createSeries('Precipitation', 1, data.precipitation, themeChartList[7]),\n      createSeries('Temperature', 2, data.temperature, themeChartList[12]),\n    ],\n  };\n\n  return <ReactEcharts option={options} theme={theme} className=\"echarts\" />;\n}\n"})})}function P(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}function $(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function F(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)($,{...e})}):$(e)}function D(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption, SeriesOption } from 'echarts';\nimport { YAXisOption } from 'echarts/types/dist/shared';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-line-multiple-y-axis.html',\n  styleUrls: ['./echarts-line-multiple-y-axis.css'],\n})\nexport default class EchartsLineMultipleYAxis implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  dates = Array.from({ length: 2025 - 2013 }, (_, i) => (2013 + i).toString());\n\n  months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  data = {\n    evaporation: this.months.map(() => (Math.random() * 100).toFixed(2)),\n    precipitation: this.months.map(() => (Math.random() * 200).toFixed(2)),\n    temperature: this.months.map(() => (Math.random() * 30).toFixed(2)),\n  };\n\n  themeChartList = Array.from({ length: 17 }, (_, i) =>\n    getComputedCSSProperty(`chart-${i + 1}`)\n  );\n\n  createYAxis(\n    name: string,\n    position: 'left' | 'right',\n    color: string,\n    formatter: string,\n    offset: number = 0\n  ): YAXisOption {\n    return {\n      type: 'value',\n      name: name,\n      position: position,\n      offset: offset,\n      alignTicks: true,\n      axisLabel: {\n        formatter: formatter,\n      },\n      axisTick: {\n        lineStyle: {\n          color: color,\n        },\n      },\n      axisLine: {\n        lineStyle: {\n          color: color,\n        },\n      },\n    };\n  }\n\n  createSeries(\n    name: string,\n    yAxisIndex: number,\n    data: any,\n    color: string\n  ): SeriesOption {\n    return {\n      name: name,\n      type: 'line',\n      yAxisIndex: yAxisIndex,\n      data: data,\n      lineStyle: {\n        color: color,\n      },\n      itemStyle: {\n        color: color,\n      },\n    };\n  }\n\n  options: EChartsOption = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: { type: 'cross' },\n    },\n    grid: {\n      right: '20%',\n    },\n    legend: {\n      show: true,\n      bottom: '0',\n      left: '0',\n    },\n    xAxis: [\n      {\n        type: 'category',\n        axisTick: { alignWithLabel: true },\n        data: this.months,\n      },\n    ],\n    yAxis: [\n      this.createYAxis(\n        'Evaporation',\n        'right',\n        this.themeChartList[0],\n        '{value} ml'\n      ),\n      this.createYAxis(\n        'Precipitation',\n        'right',\n        this.themeChartList[7],\n        '{value} ml',\n        80\n      ),\n      this.createYAxis(\n        'Temperature',\n        'left',\n        this.themeChartList[12],\n        '{value} \xb0C'\n      ),\n    ],\n    series: [\n      this.createSeries(\n        'Evaporation',\n        0,\n        this.data.evaporation,\n        this.themeChartList[0]\n      ),\n      this.createSeries(\n        'Precipitation',\n        1,\n        this.data.precipitation,\n        this.themeChartList[7]\n      ),\n      this.createSeries(\n        'Temperature',\n        2,\n        this.data.temperature,\n        this.themeChartList[12]\n      ),\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function M(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(D,{...e})}):D(e)}function I(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function z(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(I,{...e})}):I(e)}function U(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function Y(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(U,{...e})}):U(e)}function B(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { NgxEchartsDirective, provideEchartsCore } from 'ngx-echarts';\n\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption, SeriesOption } from 'echarts';\nimport { YAXisOption } from 'echarts/types/dist/shared';\n\n@Component({\n  standalone: true,\n  selector: 'app-example',\n  providers: [provideEchartsCore({ echarts })],\n  imports: [NgxEchartsDirective],\n  templateUrl: './echarts-line-multiple-y-axis.html',\n  styleUrls: ['./echarts-line-multiple-y-axis.css'],\n})\nexport default class EchartsLineMultipleYAxis implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  dates = Array.from({ length: 2025 - 2013 }, (_, i) => (2013 + i).toString());\n\n  months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  data = {\n    evaporation: this.months.map(() => (Math.random() * 100).toFixed(2)),\n    precipitation: this.months.map(() => (Math.random() * 200).toFixed(2)),\n    temperature: this.months.map(() => (Math.random() * 30).toFixed(2)),\n  };\n\n  themeChartList = Array.from({ length: 17 }, (_, i) =>\n    getComputedCSSProperty(`chart-${i + 1}`)\n  );\n\n  createYAxis(\n    name: string,\n    position: 'left' | 'right',\n    color: string,\n    formatter: string,\n    offset: number = 0\n  ): YAXisOption {\n    return {\n      type: 'value',\n      name: name,\n      position: position,\n      offset: offset,\n      alignTicks: true,\n      axisLabel: {\n        formatter: formatter,\n      },\n      axisTick: {\n        lineStyle: {\n          color: color,\n        },\n      },\n      axisLine: {\n        lineStyle: {\n          color: color,\n        },\n      },\n    };\n  }\n\n  createSeries(\n    name: string,\n    yAxisIndex: number,\n    data: any,\n    color: string\n  ): SeriesOption {\n    return {\n      name: name,\n      type: 'line',\n      yAxisIndex: yAxisIndex,\n      data: data,\n      lineStyle: {\n        color: color,\n      },\n      itemStyle: {\n        color: color,\n      },\n    };\n  }\n\n  options: EChartsOption = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: { type: 'cross' },\n    },\n    grid: {\n      right: '20%',\n    },\n    legend: {\n      show: true,\n      bottom: '0',\n      left: '0',\n    },\n    xAxis: [\n      {\n        type: 'category',\n        axisTick: { alignWithLabel: true },\n        data: this.months,\n      },\n    ],\n    yAxis: [\n      this.createYAxis(\n        'Evaporation',\n        'right',\n        this.themeChartList[0],\n        '{value} ml'\n      ),\n      this.createYAxis(\n        'Precipitation',\n        'right',\n        this.themeChartList[7],\n        '{value} ml',\n        80\n      ),\n      this.createYAxis(\n        'Temperature',\n        'left',\n        this.themeChartList[12],\n        '{value} \xb0C'\n      ),\n    ],\n    series: [\n      this.createSeries(\n        'Evaporation',\n        0,\n        this.data.evaporation,\n        this.themeChartList[0]\n      ),\n      this.createSeries(\n        'Precipitation',\n        1,\n        this.data.precipitation,\n        this.themeChartList[7]\n      ),\n      this.createSeries(\n        'Temperature',\n        2,\n        this.data.temperature,\n        this.themeChartList[12]\n      ),\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function V(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(B,{...e})}):B(e)}function W(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div echarts [options]="options" [theme]="theme" class="echarts"></div>\n'})})}function J(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(W,{...e})}):W(e)}function q(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function G(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(q,{...e})}):q(e)}function H(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption, SeriesOption } from 'echarts';\nimport { YAXisOption } from 'echarts/types/dist/shared';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.LineChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nconst dates = Array.from({ length: 2025 - 2013 }, (_, i) =>\n  (2013 + i).toString()\n);\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst data = {\n  evaporation: months.map(() => (Math.random() * 100).toFixed(2)),\n  precipitation: months.map(() => (Math.random() * 200).toFixed(2)),\n  temperature: months.map(() => (Math.random() * 30).toFixed(2)),\n};\n\nconst themeChartList = Array.from({ length: 17 }, (_, i) =>\n  getComputedCSSProperty(`chart-${i + 1}`)\n);\n\nfunction createYAxis(\n  name: string,\n  position: 'left' | 'right',\n  color: string,\n  formatter: string,\n  offset: number = 0\n): YAXisOption {\n  return {\n    type: 'value',\n    name: name,\n    position: position,\n    offset: offset,\n    alignTicks: true,\n    axisLabel: {\n      formatter: formatter,\n    },\n    axisTick: {\n      lineStyle: {\n        color: color,\n      },\n    },\n    axisLine: {\n      lineStyle: {\n        color: color,\n      },\n    },\n  };\n}\n\nfunction createSeries(\n  name: string,\n  yAxisIndex: number,\n  data: any,\n  color: string\n): SeriesOption {\n  return {\n    name: name,\n    type: 'line',\n    yAxisIndex: yAxisIndex,\n    data: data,\n    lineStyle: {\n      color: color,\n    },\n    itemStyle: {\n      color: color,\n    },\n  } as SeriesOption;\n}\n\nconst options: EChartsOption = {\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'cross' },\n  },\n  grid: {\n    right: '20%',\n  },\n  legend: {\n    show: true,\n    bottom: '0',\n    left: '0',\n  },\n  xAxis: [\n    {\n      type: 'category',\n      axisTick: { alignWithLabel: true },\n      data: months,\n    },\n  ],\n  yAxis: [\n    createYAxis('Evaporation', 'right', themeChartList[0], '{value} ml'),\n    createYAxis('Precipitation', 'right', themeChartList[7], '{value} ml', 80),\n    createYAxis('Temperature', 'left', themeChartList[12], '{value} \xb0C'),\n  ],\n  series: [\n    createSeries('Evaporation', 0, data.evaporation, themeChartList[0]),\n    createSeries('Precipitation', 1, data.precipitation, themeChartList[7]),\n    createSeries('Temperature', 2, data.temperature, themeChartList[12]),\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-line-multiple-y-axis.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function K(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(H,{...e})}):H(e)}function X(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function Z(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(X,{...e})}):X(e)}function Q(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts line multiple y-axis example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-line-multiple-y-axis.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import {\n        getComputedCSSProperty,\n        registerTheme,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const months = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ];\n\n      const data = {\n        evaporation: months.map(() => (Math.random() * 100).toFixed(2)),\n        precipitation: months.map(() => (Math.random() * 200).toFixed(2)),\n        temperature: months.map(() => (Math.random() * 30).toFixed(2)),\n      };\n\n      const themeChartList = Array.from({ length: 17 }, (_, i) =>\n        getComputedCSSProperty(`chart-${i + 1}`)\n      );\n\n      function createYAxis(name, position, color, formatter, offset) {\n        return {\n          type: 'value',\n          name: name,\n          position: position,\n          offset: offset,\n          axisLabel: {\n            formatter: formatter,\n          },\n          axisTick: {\n            lineStyle: {\n              color: color,\n            },\n          },\n          axisLine: {\n            lineStyle: {\n              color: color,\n            },\n          },\n        };\n      }\n\n      function createSeries(name, yAxisIndex, data, color) {\n        return {\n          name: name,\n          type: 'line',\n          yAxisIndex: yAxisIndex,\n          data: data,\n          lineStyle: {\n            color: color,\n          },\n          itemStyle: {\n            color: color,\n          },\n        };\n      }\n\n      const options = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: { type: 'cross' },\n        },\n        grid: {\n          right: '20%',\n        },\n        legend: {\n          show: true,\n          bottom: '0',\n          left: '0',\n        },\n        xAxis: [\n          {\n            type: 'category',\n            axisTick: { alignWithLabel: true },\n            data: months,\n          },\n        ],\n        yAxis: [\n          createYAxis('Evaporation', 'right', themeChartList[0], '{value} ml'),\n          createYAxis(\n            'Precipitation',\n            'right',\n            themeChartList[7],\n            '{value} ml',\n            80\n          ),\n          createYAxis('Temperature', 'left', themeChartList[12], '{value} \xb0C'),\n        ],\n        series: [\n          createSeries('Evaporation', 0, data.evaporation, themeChartList[0]),\n          createSeries(\n            'Precipitation',\n            1,\n            data.precipitation,\n            themeChartList[7]\n          ),\n          createSeries('Temperature', 2, data.temperature, themeChartList[12]),\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function ee(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(Q,{...e})}):Q(e)}function ne(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function te(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ne,{...e})}):ne(e)}function re(e){return(0,s.jsx)(i.A,{name:"echarts-line-multiple-y-axis",source:{react:{"echarts-line-multiple-y-axis.tsx":P,"echarts-line-multiple-y-axis.scoped.css":F},angular:{"echarts-line-multiple-y-axis.ts":M,"echarts-line-multiple-y-axis.html":z,"echarts-line-multiple-y-axis.css":Y},angular_standalone:{"echarts-line-multiple-y-axis.ts":V,"echarts-line-multiple-y-axis.html":J,"echarts-line-multiple-y-axis.css":G},vue:{"echarts-line-multiple-y-axis.vue":K,"echarts-line-multiple-y-axis.css":Z},html:{"echarts-line-multiple-y-axis.html":ee,"echarts-line-multiple-y-axis.css":te}},files:{react:{"echarts-line-multiple-y-axis.tsx":"react/echarts-line-multiple-y-axis.tsx","echarts-line-multiple-y-axis.scoped.css":"react/echarts-line-multiple-y-axis.scoped.css"},angular:{"echarts-line-multiple-y-axis.ts":"angular/echarts-line-multiple-y-axis.ts","echarts-line-multiple-y-axis.html":"angular/echarts-line-multiple-y-axis.html","echarts-line-multiple-y-axis.css":"angular/echarts-line-multiple-y-axis.css"},angular_standalone:{"echarts-line-multiple-y-axis.ts":"angular_standalone/echarts-line-multiple-y-axis.ts","echarts-line-multiple-y-axis.html":"angular_standalone/echarts-line-multiple-y-axis.html","echarts-line-multiple-y-axis.css":"angular_standalone/echarts-line-multiple-y-axis.css"},vue:{"echarts-line-multiple-y-axis.vue":"vue/echarts-line-multiple-y-axis.vue","echarts-line-multiple-y-axis.css":"vue/echarts-line-multiple-y-axis.css"},html:{"echarts-line-multiple-y-axis.html":"html/echarts-line-multiple-y-axis.html","echarts-line-multiple-y-axis.css":"html/echarts-line-multiple-y-axis.css"}},height:e.height,onlyFramework:e.onlyFramework})}function se(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(re,{...e})}):re(e)}function ae(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-line-advanced.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsLineAdvanced() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const dates = Array.from({ length: 2025 - 2013 }, (_, i) =>\n    (2013 + i).toString()\n  );\n\n  const stockData = [\n    77.67, 82.81, 84.09, 91.75, 118.15, 107.48, 99.36, 93.07, 137.18, 104.38,\n    156.48, 168.52,\n  ];\n\n  const options: EChartsOption = {\n    tooltip: { trigger: 'axis' },\n    xAxis: { type: 'category', data: dates },\n    yAxis: {\n      type: 'value',\n      splitLine: { lineStyle: { type: 'dashed' } },\n    },\n    series: [\n      {\n        type: 'line',\n        data: stockData,\n        smooth: true,\n        lineStyle: { width: 4, shadowBlur: 10 },\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: getComputedCSSProperty('color-primary'),\n            },\n            { offset: 1, color: 'transparent' },\n          ]),\n        },\n        markPoint: {\n          data: [\n            { type: 'max', name: 'Max', symbol: 'circle', symbolSize: 60 },\n            { type: 'min', name: 'Min', symbol: 'circle', symbolSize: 60 },\n          ],\n          label: {\n            fontWeight: 'bold',\n            color: getComputedCSSProperty('color-inv-contrast-text'),\n          },\n        },\n        markLine: {\n          data: [{ type: 'average', name: 'Avg' }],\n          lineStyle: { type: 'dashed' },\n        },\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function ie(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ae,{...e})}):ae(e)}function oe(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function ce(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(oe,{...e})}):oe(e)}function le(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { registerTheme, getComputedCSSProperty } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-line-advanced.html',\n  styleUrls: ['./echarts-line-advanced.css'],\n})\nexport default class EchartsLineAdvanced implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  dates = Array.from({ length: 2025 - 2013 }, (_, i) => (2013 + i).toString());\n\n  stockData = [\n    77.67, 82.81, 84.09, 91.75, 118.15, 107.48, 99.36, 93.07, 137.18, 104.38,\n    156.48, 168.52,\n  ];\n\n  options: EChartsOption = {\n    tooltip: { trigger: 'axis' },\n    xAxis: { type: 'category', data: this.dates },\n    yAxis: {\n      type: 'value',\n      splitLine: { lineStyle: { type: 'dashed' } },\n    },\n    series: [\n      {\n        type: 'line',\n        data: this.stockData,\n        smooth: true,\n        lineStyle: { width: 4, shadowBlur: 10 },\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: getComputedCSSProperty('color-primary'),\n            },\n            { offset: 1, color: 'transparent' },\n          ]),\n        },\n        markPoint: {\n          data: [\n            { type: 'max', name: 'Max', symbol: 'circle', symbolSize: 60 },\n            { type: 'min', name: 'Min', symbol: 'circle', symbolSize: 60 },\n          ],\n          label: {\n            fontWeight: 'bold',\n            color: getComputedCSSProperty('color-inv-contrast-text'),\n          },\n        },\n        markLine: {\n          data: [{ type: 'average', name: 'Avg' }],\n          lineStyle: { type: 'dashed' },\n        },\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function he(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(le,{...e})}):le(e)}function me(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function pe(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(me,{...e})}):me(e)}function de(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function ue(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(de,{...e})}):de(e)}function ge(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { NgxEchartsDirective, provideEchartsCore } from 'ngx-echarts';\n\nimport { registerTheme, getComputedCSSProperty } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  standalone: true,\n  selector: 'app-example',\n  providers: [provideEchartsCore({ echarts })],\n  imports: [NgxEchartsDirective],\n  templateUrl: './echarts-line-advanced.html',\n  styleUrls: ['./echarts-line-advanced.css'],\n})\nexport default class EchartsLineAdvanced implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  dates = Array.from({ length: 2025 - 2013 }, (_, i) => (2013 + i).toString());\n\n  stockData = [\n    77.67, 82.81, 84.09, 91.75, 118.15, 107.48, 99.36, 93.07, 137.18, 104.38,\n    156.48, 168.52,\n  ];\n\n  options: EChartsOption = {\n    tooltip: { trigger: 'axis' },\n    xAxis: { type: 'category', data: this.dates },\n    yAxis: {\n      type: 'value',\n      splitLine: { lineStyle: { type: 'dashed' } },\n    },\n    series: [\n      {\n        type: 'line',\n        data: this.stockData,\n        smooth: true,\n        lineStyle: { width: 4, shadowBlur: 10 },\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: getComputedCSSProperty('color-primary'),\n            },\n            { offset: 1, color: 'transparent' },\n          ]),\n        },\n        markPoint: {\n          data: [\n            { type: 'max', name: 'Max', symbol: 'circle', symbolSize: 60 },\n            { type: 'min', name: 'Min', symbol: 'circle', symbolSize: 60 },\n          ],\n          label: {\n            fontWeight: 'bold',\n            color: getComputedCSSProperty('color-inv-contrast-text'),\n          },\n        },\n        markLine: {\n          data: [{ type: 'average', name: 'Avg' }],\n          lineStyle: { type: 'dashed' },\n        },\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function xe(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ge,{...e})}):ge(e)}function fe(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div echarts [options]="options" [theme]="theme" class="echarts"></div>\n'})})}function ye(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(fe,{...e})}):fe(e)}function ve(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function we(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ve,{...e})}):ve(e)}function je(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  components.MarkPointComponent,\n  charts.LineChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst dates = Array.from({ length: 2025 - 2013 }, (_, i) =>\n  (2013 + i).toString()\n);\n\nconst stockData = [\n  77.67, 82.81, 84.09, 91.75, 118.15, 107.48, 99.36, 93.07, 137.18, 104.38,\n  156.48, 168.52,\n];\n\nconst options: EChartsOption = {\n  tooltip: { trigger: 'axis' },\n  xAxis: { type: 'category', data: dates },\n  yAxis: {\n    type: 'value',\n    splitLine: { lineStyle: { type: 'dashed' } },\n  },\n  series: [\n    {\n      type: 'line',\n      data: stockData,\n      smooth: true,\n      lineStyle: { width: 4, shadowBlur: 10 },\n      areaStyle: {\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color: getComputedCSSProperty('color-primary'),\n          },\n          { offset: 1, color: 'transparent' },\n        ]),\n      },\n      markPoint: {\n        data: [\n          { type: 'max', name: 'Max', symbol: 'circle', symbolSize: 60 },\n          { type: 'min', name: 'Min', symbol: 'circle', symbolSize: 60 },\n        ],\n        label: {\n          fontWeight: 'bold',\n          color: getComputedCSSProperty('color-inv-contrast-text'),\n        },\n      },\n      markLine: {\n        data: [{ type: 'average', name: 'Avg' }],\n        lineStyle: { type: 'dashed' },\n      },\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-line-advanced.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function Ce(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(je,{...e})}):je(e)}function Se(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function Ae(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(Se,{...e})}):Se(e)}function Ee(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts line advanced example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-line-advanced.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import {\n        registerTheme,\n        getComputedCSSProperty,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const dates = Array.from({ length: 2025 - 2013 }, (_, i) =>\n        (2013 + i).toString()\n      );\n\n      const stockData = [\n        77.67, 82.81, 84.09, 91.75, 118.15, 107.48, 99.36, 93.07, 137.18,\n        104.38, 156.48, 168.52,\n      ];\n\n      const options = {\n        tooltip: { trigger: 'axis' },\n        xAxis: { type: 'category', data: dates },\n        yAxis: {\n          type: 'value',\n          splitLine: { lineStyle: { type: 'dashed' } },\n        },\n        series: [\n          {\n            type: 'line',\n            data: stockData,\n            smooth: true,\n            lineStyle: { width: 4, shadowBlur: 10 },\n            areaStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {\n                  offset: 0,\n                  color: getComputedCSSProperty('color-primary'),\n                },\n                { offset: 1, color: 'transparent' },\n              ]),\n            },\n            markPoint: {\n              data: [\n                { type: 'max', name: 'Max', symbol: 'circle', symbolSize: 60 },\n                { type: 'min', name: 'Min', symbol: 'circle', symbolSize: 60 },\n              ],\n              label: {\n                fontWeight: 'bold',\n                color: getComputedCSSProperty('color-inv-contrast-text'),\n              },\n            },\n            markLine: {\n              data: [{ type: 'average', name: 'Avg' }],\n              lineStyle: { type: 'dashed' },\n            },\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function be(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(Ee,{...e})}):Ee(e)}function ke(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function Te(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ke,{...e})}):ke(e)}function _e(e){return(0,s.jsx)(i.A,{name:"echarts-line-advanced",source:{react:{"echarts-line-advanced.tsx":ie,"echarts-line-advanced.scoped.css":ce},angular:{"echarts-line-advanced.ts":he,"echarts-line-advanced.html":pe,"echarts-line-advanced.css":ue},angular_standalone:{"echarts-line-advanced.ts":xe,"echarts-line-advanced.html":ye,"echarts-line-advanced.css":we},vue:{"echarts-line-advanced.vue":Ce,"echarts-line-advanced.css":Ae},html:{"echarts-line-advanced.html":be,"echarts-line-advanced.css":Te}},files:{react:{"echarts-line-advanced.tsx":"react/echarts-line-advanced.tsx","echarts-line-advanced.scoped.css":"react/echarts-line-advanced.scoped.css"},angular:{"echarts-line-advanced.ts":"angular/echarts-line-advanced.ts","echarts-line-advanced.html":"angular/echarts-line-advanced.html","echarts-line-advanced.css":"angular/echarts-line-advanced.css"},angular_standalone:{"echarts-line-advanced.ts":"angular_standalone/echarts-line-advanced.ts","echarts-line-advanced.html":"angular_standalone/echarts-line-advanced.html","echarts-line-advanced.css":"angular_standalone/echarts-line-advanced.css"},vue:{"echarts-line-advanced.vue":"vue/echarts-line-advanced.vue","echarts-line-advanced.css":"vue/echarts-line-advanced.css"},html:{"echarts-line-advanced.html":"html/echarts-line-advanced.html","echarts-line-advanced.css":"html/echarts-line-advanced.css"}},height:e.height,onlyFramework:e.onlyFramework})}function Le(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(_e,{...e})}):_e(e)}const Oe={"doc-type":"banner",description:"Line charts display data as a series of data points connected by straight line segments. Line charts are commonly used to visualize trends over time or compare two variables. We typically use line charts to visualize continuous data.",title:"Line chart",deprecated:null},Ne="Line chart - Code",Re={},Pe=[{value:"Basic",id:"basic",level:2},{value:"Multi-y-axis line charts",id:"multi-y-axis-line-charts",level:2},{value:"Advanced line charts",id:"advanced-line-charts",level:2},{value:"Dos and Don&#39;ts",id:"dos-and-donts",level:2}];function $e(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"line-chart---code",children:"Line chart - Code"})}),"\n",(0,s.jsx)(n.h2,{id:"basic",children:"Basic"}),"\n",(0,s.jsx)(n.p,{children:"Basic line charts use a series of data points connected by straight lines to show changes in values, making it easy to identify patterns, trends and fluctuations. Line charts are particularly effective for displaying continuous data, such as stock prices, temperature changes or sales figures. Their simplicity and clarity make them a popular choice for dashboards, where understanding data trends is essential."}),"\n",(0,s.jsx)(N,{height:"40rem"}),"\n",(0,s.jsx)(n.h2,{id:"multi-y-axis-line-charts",children:"Multi-y-axis line charts"}),"\n",(0,s.jsx)(n.p,{children:"Multi-y-axis line charts are used to compare multiple data series that have different scales or units of measurement. By using multiple y-axes, you can display data with different ranges on the same chart, making it easier to compare trends and relationships between variables. Multi-y-axis line charts are particularly useful when visualizing data with distinct patterns or trends."}),"\n",(0,s.jsx)(se,{height:"40rem"}),"\n",(0,s.jsx)(n.h2,{id:"advanced-line-charts",children:"Advanced line charts"}),"\n",(0,s.jsx)(n.p,{children:"Advanced line charts are an enhanced version of basic line charts, designed to provide deeper insights and a more detailed analysis of data trends. These charts often incorporate features such as multiple data series, interactive elements, and additional annotations to highlight key points or events. Advanced line charts can also include trend lines, moving averages and other statistical tools to help identify patterns and correlations."}),"\n",(0,s.jsx)(Le,{height:"40rem"}),"\n",(0,s.jsx)(n.h2,{id:"dos-and-donts",children:"Dos and Don'ts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Do start the Y-axis at zero and label axes clearly"}),"\n",(0,s.jsx)(n.li,{children:"Do use contrasting colors for multiple lines to better distinguish different data series"}),"\n",(0,s.jsx)(n.li,{children:"Do use consistent intervals on axes"}),"\n",(0,s.jsx)(n.li,{children:"Do highlight important data points"}),"\n",(0,s.jsx)(n.li,{children:"Do use visual cues to show gaps in data"}),"\n",(0,s.jsx)(n.li,{children:"Don\u2019t overcrowd the chart with colors"}),"\n",(0,s.jsx)(n.li,{children:"Don\u2019t clutter the chart with too many lines, we recommend no more than 7 lines"}),"\n"]})]})}function Fe(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)($e,{...e})}):$e(e)}},38025:(e,n,t)=>{t.d(n,{A:()=>b});const r=["angular-cli","create-react-app","html","javascript","node","polymer","typescript","vue"],s=["project","search","ports","settings"],a=["light","dark"],i=["editor","preview"],o={clickToLoad:e=>l("ctl",e),devToolsHeight:e=>h("devtoolsheight",e),forceEmbedLayout:e=>l("embed",e),hideDevTools:e=>l("hidedevtools",e),hideExplorer:e=>l("hideExplorer",e),hideNavigation:e=>l("hideNavigation",e),openFile:e=>p("file",e),showSidebar:e=>function(e,n){if("boolean"==typeof n)return`${e}=${n?"1":"0"}`;return""}("showSidebar",e),sidebarView:e=>m("sidebarView",e,s),startScript:e=>p("startScript",e),terminalHeight:e=>h("terminalHeight",e),theme:e=>m("theme",e,a),view:e=>m("view",e,i),zenMode:e=>l("zenMode",e),organization:e=>`${p("orgName",e?.name)}&${p("orgProvider",e?.provider)}`,crossOriginIsolated:e=>l("corp",e)};function c(e={}){const n=Object.entries(e).map((([e,n])=>null!=n&&o.hasOwnProperty(e)?o[e](n):"")).filter(Boolean);return n.length?`?${n.join("&")}`:""}function l(e,n){return!0===n?`${e}=1`:""}function h(e,n){if("number"==typeof n&&!Number.isNaN(n)){const t=Math.min(100,Math.max(0,n));return`${e}=${encodeURIComponent(Math.round(t))}`}return""}function m(e,n="",t=[]){return t.includes(n)?`${e}=${encodeURIComponent(n)}`:""}function p(e,n){return(Array.isArray(n)?n:[n]).filter((e=>"string"==typeof e&&""!==e.trim())).map((n=>`${e}=${encodeURIComponent(n)}`)).join("&")}function d(){return Math.random().toString(36).slice(2,6)+Math.random().toString(36).slice(2,6)}function u(e,n){return`${x(n)}${e}${c(n)}`}function g(e,n){const t={forceEmbedLayout:!0};return n&&"object"==typeof n&&Object.assign(t,n),`${x(t)}${e}${c(t)}`}function x(e={}){return("string"==typeof e.origin?e.origin:"https://stackblitz.com").replace(/\/$/,"")}function f(e,n,t){if(!n||!e||!e.parentNode)throw new Error("Invalid Element");e.id&&(n.id=e.id),e.className&&(n.className=e.className),function(e,n={}){const t=Object.hasOwnProperty.call(n,"height")?`${n.height}`:"300",r=Object.hasOwnProperty.call(n,"width")?`${n.width}`:void 0;e.setAttribute("height",t),r?e.setAttribute("width",r):e.setAttribute("style","width:100%;")}(n,t),function(e,n,t={}){const r=e.allow?.split(";")?.map((e=>e.trim()))??[];t.crossOriginIsolated&&!r.includes("cross-origin-isolated")&&r.push("cross-origin-isolated");r.length>0&&(n.allow=r.join("; "))}(e,n,t),e.replaceWith(n)}function y(e){if("string"==typeof e){const n=document.getElementById(e);if(!n)throw new Error(`Could not find element with id '${e}'`);return n}if(e instanceof HTMLElement)return e;throw new Error(`Invalid element: ${e}`)}function v(e){return e&&!1===e.newWindow?"_self":"_blank"}class w{constructor(e){this.pending={},this.port=e,this.port.onmessage=this.messageListener.bind(this)}request({type:e,payload:n}){return new Promise(((t,r)=>{const s=d();this.pending[s]={resolve:t,reject:r},this.port.postMessage({type:e,payload:{...n,__reqid:s}})}))}messageListener(e){if("string"!=typeof e.data.payload?.__reqid)return;const{type:n,payload:t}=e.data,{__reqid:r,__success:s,__error:a}=t;this.pending[r]&&(s?this.pending[r].resolve(this.cleanResult(t)):this.pending[r].reject(a?`${n}: ${a}`:n),delete this.pending[r])}cleanResult(e){const n={...e};return delete n.__reqid,delete n.__success,delete n.__error,Object.keys(n).length?n:null}}class j{constructor(e,n){this.editor={openFile:e=>this._rdc.request({type:"SDK_OPEN_FILE",payload:{path:e}}),setCurrentFile:e=>this._rdc.request({type:"SDK_SET_CURRENT_FILE",payload:{path:e}}),setTheme:e=>this._rdc.request({type:"SDK_SET_UI_THEME",payload:{theme:e}}),setView:e=>this._rdc.request({type:"SDK_SET_UI_VIEW",payload:{view:e}}),showSidebar:(e=!0)=>this._rdc.request({type:"SDK_TOGGLE_SIDEBAR",payload:{visible:e}})},this.preview={origin:"",getUrl:()=>this._rdc.request({type:"SDK_GET_PREVIEW_URL",payload:{}}).then((e=>e?.url??null)),setUrl:(e="/")=>{if("string"!=typeof e||!e.startsWith("/"))throw new Error(`Invalid argument: expected a path starting with '/', got '${e}'`);return this._rdc.request({type:"SDK_SET_PREVIEW_URL",payload:{path:e}})}},this._rdc=new w(e),Object.defineProperty(this.preview,"origin",{value:"string"==typeof n.previewOrigin?n.previewOrigin:null,writable:!1})}applyFsDiff(e){const n=e=>null!==e&&"object"==typeof e;if(!n(e)||!n(e.create))throw new Error("Invalid diff object: expected diff.create to be an object.");if(!Array.isArray(e.destroy))throw new Error("Invalid diff object: expected diff.destroy to be an array.");return this._rdc.request({type:"SDK_APPLY_FS_DIFF",payload:e})}getDependencies(){return this._rdc.request({type:"SDK_GET_DEPS_SNAPSHOT",payload:{}})}getFsSnapshot(){return this._rdc.request({type:"SDK_GET_FS_SNAPSHOT",payload:{}})}}const C=[];class S{constructor(e){this.id=d(),this.element=e,this.pending=new Promise(((e,n)=>{const t=({data:n,ports:t})=>{"SDK_INIT_SUCCESS"===n?.action&&n.id===this.id&&(this.vm=new j(t[0],n.payload),e(this.vm),s())},r=()=>{this.element.contentWindow?.postMessage({action:"SDK_INIT",id:this.id},"*")};function s(){window.clearInterval(i),window.removeEventListener("message",t)}window.addEventListener("message",t),r();let a=0;const i=window.setInterval((()=>{if(this.vm)s();else{if(a>=20)return s(),n("Timeout: Unable to establish a connection with the StackBlitz VM"),void C.forEach(((e,n)=>{e.id===this.id&&C.splice(n,1)}));a++,r()}}),500)})),C.push(this)}}function A({template:e,title:n,description:t,dependencies:s,files:a,settings:i}){if(!r.includes(e)){const e=r.map((e=>`'${e}'`)).join(", ");console.warn(`Unsupported project.template: must be one of ${e}`)}const o=[],c=(e,n,t="")=>{o.push(function(e,n){const t=document.createElement("input");return t.type="hidden",t.name=e,t.value=n,t}(e,"string"==typeof n?n:t))};c("project[title]",n),"string"==typeof t&&t.length>0&&c("project[description]",t),c("project[template]",e,"javascript"),s&&("node"===e?console.warn("Invalid project.dependencies: dependencies must be provided as a 'package.json' file when using the 'node' template."):c("project[dependencies]",JSON.stringify(s))),i&&c("project[settings]",JSON.stringify(i)),Object.entries(a).forEach((([e,n])=>{c(`project[files][${function(e){return e.replace(/\[/g,"%5B").replace(/\]/g,"%5D")}(e)}]`,n)}));const l=document.createElement("form");return l.method="POST",l.setAttribute("style","display:none!important;"),l.append(...o),l}function E(e){if(!e?.contentWindow)return Promise.reject("Provided element is not an iframe.");return((e=>{const n=e instanceof Element?"element":"id";return C.find((t=>t[n]===e))??null})(e)??new S(e)).pending}const b={connect:E,embedGithubProject:function(e,n,t){const r=y(e),s=document.createElement("iframe");return s.src=g(`/github/${n}`,t),f(r,s,t),E(s)},embedProject:function(e,n,t){const r=y(e),s=function(e,n){const t=A(e);return t.action=g("/run",n),t.id="sb_run",`<!doctype html>\n<html>\n<head><title></title></head>\n<body>\n  ${t.outerHTML}\n  <script>document.getElementById('${t.id}').submit();<\/script>\n</body>\n</html>`}(n,t),a=document.createElement("iframe");return f(r,a,t),a.contentDocument?.write(s),E(a)},embedProjectId:function(e,n,t){const r=y(e),s=document.createElement("iframe");return s.src=g(`/edit/${n}`,t),f(r,s,t),E(s)},openGithubProject:function(e,n){const t=u(`/github/${e}`,n),r=v(n);window.open(t,r)},openProject:function(e,n){!function(e,n){const t=A(e);t.action=u("/run",n),t.target=v(n),document.body.appendChild(t),t.submit(),document.body.removeChild(t)}(e,n)},openProjectId:function(e,n){const t=u(`/edit/${e}`,n),r=v(n);window.open(t,r)}}},53823:(e,n,t)=>{t.d(n,{M:()=>s});var r=t(30758);function s(e,n){if("undefined"==typeof window)return[n,()=>{},!1];const[t,s]=(0,r.useState)((()=>{try{const t=window.localStorage.getItem(e);return t?JSON.parse(t):n}catch(t){return console.error(t),n}}));return(0,r.useEffect)((()=>{const n=n=>{if(n.key===e){const e=n.newValue?JSON.parse(n.newValue):void 0;s(e)}};return window.addEventListener("storage",n),()=>{window.removeEventListener("storage",n)}}),[e]),[t,n=>{try{const r=n instanceof Function?n(t):n;s(r),window.localStorage.setItem(e,JSON.stringify(r)),window.dispatchEvent(new StorageEvent("storage",{key:e,newValue:JSON.stringify(r)}))}catch(r){console.error(r)}},!!window.localStorage.getItem(e)]}},54451:(e,n,t)=>{t.d(n,{F:()=>s,u:()=>a});var r=t(53823);const s=e=>{switch(e){case"angular":return"Angular";case"angular_standalone":return"Angular (Standalone)";case"react":return"React";case"vue":return"Vue";case"html":return"HTML"}},a=()=>{const[e,n]=(0,r.M)("docusaurus.code.framework","angular");return{framework:e,setFramework:n}}},54819:(e,n,t)=>{t.d(n,{A:()=>h});var r=t(86447),s=t(30758),a=t(15561),i=t(93514),o=t(51168),c=t(86070);function l(){const{playgroundThemeVariant:e,setPlaygroundThemeVariant:n}=(0,i.z)();return(0,c.jsxs)(a.A,{onClick:()=>{n("light"===e?"dark":"light")},children:[s.createElement("ix-icon",{name:"light"===e?r.iconSun:r.iconMoon,size:"16"}),(0,c.jsx)("span",{className:"ButtonText",children:"light"===e?"Light":"Dark"})]})}const h=()=>(0,c.jsx)(o.A,{children:()=>(0,c.jsx)(l,{})})},62970:(e,n,t)=>{t.d(n,{A:()=>D});var r=t(51168),s=t(63615),a=t(86447),i=t(93514),o=t(52543),c=t(13526),l=t(30758),h=t(99699),m=t(15561);const p={CodePreview:"CodePreview_qXsk",DropdownItem:"DropdownItem_H2XB",sourceFileName:"sourceFileName_EMBm",toolbar:"toolbar_rOKU",code:"code_RYOk"};var d=t(86070);function u(e){const{selectedFramework:n}=e,[t,r]=(0,l.useState)(""),[s,i]=(0,l.useState)((()=>()=>(0,d.jsx)(o.A,{children:"Test"}))),c=(0,l.useRef)(null);return(0,l.useEffect)((()=>{if(e.files?.[n]){const t=Object.keys(e.files[n])[0];r(t),i((()=>e.source[n][t]))}}),[n]),(0,l.useEffect)((()=>{e.onShowSource(s)}),[s]),(0,d.jsx)("div",{className:p.CodePreview,children:e.source?.[n]&&(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(m.A,{ref:c,className:p.sourceFileButton,children:[(0,d.jsx)("span",{className:p.sourceFileName,children:t}),l.createElement("ix-icon",{name:a.iconChevronDownSmall,size:"16"})]}),c.current&&(0,d.jsx)(h.$9,{trigger:c.current,children:Object.keys(e.source[n]).map((s=>(0,d.jsx)(h.iz,{className:p.DropdownItem,checked:t===s,onClick:()=>{r(s),i((()=>e.source[n][s]))},children:s},s)))})]})})}var g=t(95083),x=t(9731);async function f(e,n=!0){const t=await fetch(e);if(!t.ok)throw`Error fetching code from ${e}`;const r=await t.text();if(!r||r?.includes('<div id="__docusaurus"></div>')||r?.includes("Page Not Found"))throw`Error fetching code from ${e}`;return n?r.replace(/\/\*[^]*?\*\//gs,"").replace(/<!--[^]*?-->/gs,"").trim():r}var y=t(38025);function v(e,n,t,r){!function(e,n){const t=e["package.json"];e["package.json"]=t.replace(/\"<VERSION>\"/g,`"${n}"`)}(n,r),y.A.openProject({title:`iX ${(0,x.x)(e)} Example`,template:"node",description:`iX ${e} playground`,files:n},{openFile:t})}async function w(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/App.vue","src/env.d.ts","src/main.ts","index.html","package.json","tsconfig.json","vite.config.ts"].map((async t=>{const r=await f(`${e}/vue/${t}`);n[t]=r}));return await Promise.all(t),n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const a=`import ${(0,x.x)(t)} from './${t}.vue';`;return s["src/App.vue"]=s["src/App.vue"].replace("import Example from './Example.vue';",a),s["src/App.vue"]=s["src/App.vue"].replace("<Example />",`<${(0,x.x)(t)} />`),s}(e,n,t);v("vue",s,`${t}.vue`,r)}async function j(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/main.js","package.json","vite.config.ts"].map((async t=>{const r=await f(`${e}/html/${t}`);n[t]=r}));return await Promise.all(t),n["src/init.js"]=n["src/main.js"],delete n["src/main.js"],n}(e),s={...r},a=n[`${t}.html`];return s["src/index.html"]=a,Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]})),delete s[`src/${t}.html`],s}(e,n,t);v("html",s,"src/index.html",r)}async function C(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/app/app.module.ts","src/app/app.component.ts","src/app/app.component.html","src/index.html","src/main.ts","tsconfig.json","tsconfig.app.json","angular.json","package.json"].map((async t=>{const r=await f(`${e}/angular/${t}`);n[t]=r}));return await Promise.all(t),n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const a=E(n,t),i=a.map((e=>`import ${(0,x.x)(e)} from './../${e}';`)).join("\n");s["src/app/app.module.ts"]=s["src/app/app.module.ts"].replace("import ExampleComponent from './example.component';",[`import ${(0,x.x)(t)} from './../${t}';`,i].join("\n"));const o=a.map((e=>(0,x.x)(e))).join(", ");return s["src/app/app.module.ts"]=s["src/app/app.module.ts"].replace("declarations: [AppComponent, ExampleComponent],",`declarations: [AppComponent, ${(0,x.x)(t)}, ${o}],`),s}(e,n,t);v("angular",s,`src/${t}.ts`,r)}async function S(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/app/app.ts","src/app/app.html","src/index.html","src/main.ts","tsconfig.json","tsconfig.app.json","angular.json","package.json"].map((async t=>{const r=await f(`${e}/angular-standalone/${t}`);n[t]=r}));return await Promise.all(t),n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const a=E(n,t),i=a.map((e=>`import ${(0,x.x)(e)} from './../${e}';`)).join("\n");s["src/app/app.ts"]=s["src/app/app.ts"].replace('import ExampleComponent from "./example.component";',[`import ${(0,x.x)(t)} from './../${t}';`,i].join("\n"));const o=a.map((e=>(0,x.x)(e))).join(", ");return s["src/app/app.ts"]=s["src/app/app.ts"].replace("imports: [ExampleComponent],",`imports: [${(0,x.x)(t)}, ${o}],`),s}(e,n,t);v("angular-standalone",s,`src/${t}.ts`,r)}async function A(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["vite.config.ts","tsconfig.node.json","tsconfig.json","package.json","index.html","src/App.tsx","src/main.tsx","src/vite-env.d.ts"].map((async t=>{const r=await f(`${e}/react/${t}`);n[t]=r}));return await Promise.all(t),n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const a=`import ${(0,x.x)(t)} from './${t}';`;return s["src/App.tsx"]=s["src/App.tsx"].replace("import Example from './Example';",a),s["src/App.tsx"]=s["src/App.tsx"].replace("<Example />",`<${(0,x.x)(t)} />`),s}(e,n,t);v("react",s,`src/${t}.tsx`,r)}function E(e,n){const t=/@Component\(/;return Object.keys(e).filter((r=>r.endsWith(".ts")&&r!==`${n}.ts`&&t.test(e[r]))).map((e=>e.replace(".ts","")))}var b=t(16396);function k(e){const n=(0,b.A)(),t=(0,s.Ay)("/demo/v2/"),i=(0,s.Ay)("/runtime/v3");return(0,d.jsx)(r.A,{children:()=>(0,d.jsxs)(m.A,{onClick:()=>{!async function({snippetBaseUrl:e,runtimeBaseUrl:n,name:t,framework:r,sourcePath:s,version:a}){const i=a||"latest",o={};if(await Promise.all(Object.keys(s).map((async n=>{o[n]=await f(`${e}/${s[n]}`)}))),"react"===r){const r=await f(`${e}/react/global.css`);return o["styles/global.css"]=r,A(n,o,t,i)}if("angular"===r){const r=await f(`${e}/angular/global.css`);return o["styles.css"]=r,C(n,o,t,i)}if("angular_standalone"===r){const r=await f(`${e}/angular/global.css`);return o["styles.css"]=r,S(n,o,t,i)}if("html"===r){const r=await f(`${e}/html/global.css`);return o["styles/global.css"]=r,j(n,o,t,i)}if("vue"===r){const r=await f(`${e}/vue/global.css`);o["styles/global.css"]=r,w(n,o,t,i)}}({snippetBaseUrl:t,runtimeBaseUrl:i,framework:e.framework,name:e.mount,sourcePath:e.files,version:n.siteConfig.customFields.playgroundVersion??"latest"})},children:[l.createElement("ix-icon",{name:a.iconElectricalEnergyFilled,size:"16"}),(0,d.jsx)("span",{className:"ButtonText",children:"Open Stackblitz"})]})})}const T={pill:"pill_UrZt",pill__active:"pill__active_n11m"};function _({children:e,active:n,onClick:t}){return(0,d.jsx)("button",{onClick:t,className:(0,c.A)("all-unset",T.pill,{[T.pill__active]:n}),children:e})}var L=t(21809),O=t(54819);const N={playground:"playground_GmEd",openExternal:"openExternal_DsHn",toolbar:"toolbar_EsJG",preview:"preview_jEFK",code:"code_wC2A",toolbar__actions:"toolbar__actions_bull",spacer:"spacer_C_ki",iframe:"iframe_SPmo",toolbar__right:"toolbar__right_sFNj"};var R=t(21522);function P(e){return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)("a",{href:e.openExternalUrl,target:"_blank",className:(0,c.A)("flex gap-1 text-[var(--theme-color-soft-text)] flex-nowrap text-nowrap pr-2",N.openExternal),children:[l.createElement("ix-icon",{name:a.iconOpenExternal,size:"16"}),(0,d.jsx)("span",{className:"ButtonText",children:"Full preview"})]}),(0,d.jsx)(L.Ay,{onThemeChange:e.onChangeTheme}),(0,d.jsx)(O.A,{})]})}function $(e){return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("div",{className:"DesktopOnly",children:(0,d.jsx)(k,{framework:e.framework,files:e.files,mount:e.mount})}),!e.hideFrameworkSelection&&(0,d.jsx)(g.A,{onFrameworkChange:e.onFrameworkChange})]})}function F(e){const n=(0,L.wM)(),{playgroundThemeVariant:t}=(0,i.z)(),[r,a]=(0,l.useState)("dark"===t),[h,m]=(0,l.useState)(!e.noPreview),[p,g]=(0,l.useState)(n),x=(0,s.Ay)(`/demo/v2/preview/html/preview-examples/${e.alternativePreviewName??e.name}?no-margin=true&theme=theme-${p}-${r?"dark":"light"}`),[f,y]=(0,l.useState)(e.onlyFramework??"angular"),[v,w]=(0,l.useState)((()=>()=>(0,d.jsx)(o.A,{children:"Nothing to see here \ud83e\udd78"})));return(0,l.useEffect)((()=>{a("dark"===t)}),[t]),(0,d.jsx)(R.D.Provider,{value:{currentTheme:p,isDarkColor:r},children:(0,d.jsx)(R.S,{children:(0,d.jsxs)("div",{className:N.playground,children:[(0,d.jsxs)("div",{className:N.toolbar,children:[!e.noPreview&&(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(_,{onClick:()=>m(!0),active:h,children:"Preview"}),(0,d.jsx)(_,{onClick:()=>m(!1),active:!h,children:"Code"}),(0,d.jsx)("div",{className:N.spacer})]}),(0,d.jsxs)("div",{className:N.toolbar__right,children:[!h&&(0,d.jsx)(u,{selectedFramework:f,name:e.name,files:e.files,source:e.source,onShowSource:e=>{w((()=>e))}}),(0,d.jsx)("div",{className:N.toolbar__actions,children:h?(0,d.jsx)(P,{openExternalUrl:x,onChangeTheme:g}):(0,d.jsx)($,{mount:e.name,hideFrameworkSelection:!!e.onlyFramework,onFrameworkChange:y,framework:f,files:e.files[f]})})]})]}),(0,d.jsx)("div",{className:(0,c.A)(N.preview,{[N.code]:h}),style:{"--preview-height":e.height},children:h?(0,d.jsx)("iframe",{title:`Preview for ${e.name}`,src:x,className:N.iframe}):(0,d.jsx)(v,{})})]})})})}function D(e){return(0,d.jsx)(r.A,{children:()=>(0,d.jsx)(F,{...e})})}},93514:(e,n,t)=>{t.d(n,{A:()=>a,z:()=>i});var r=t(30758),s=t(49517);const a=()=>{const e=(0,r.useContext)(s.J);return{playgroundTheme:e.theme,setPlaygroundTheme:n=>e.onThemeChange?.(n)}},i=()=>{const e=(0,r.useContext)(s.J);return{playgroundThemeVariant:e.variant,setPlaygroundThemeVariant:n=>e.onVariantChange?.(n)}}},95083:(e,n,t)=>{t.d(n,{A:()=>h});var r=t(51168),s=t(86447),a=t(99699),i=t(54451),o=t(30758),c=t(15561),l=t(86070);function h(e){return(0,l.jsx)(r.A,{children:()=>(0,l.jsx)(m,{...e})})}function m(e){const{framework:n,setFramework:t}=(0,i.u)(),[r,h]=(0,o.useState)(null);return(0,o.useEffect)((()=>{e.onFrameworkChange&&e.onFrameworkChange(n)}),[n]),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(c.A,{ref:h,className:"dropdown-button",children:[o.createElement("ix-icon",{name:s.iconCode,size:"16"}),(0,l.jsx)("span",{className:"ButtonText",children:(0,i.F)(n)}),o.createElement("ix-icon",{name:s.iconChevronDownSmall,size:"16"})]}),r&&(0,l.jsxs)(a.$9,{trigger:r,children:[(0,l.jsx)(a.iz,{onClick:()=>t("angular"),children:"Angular"}),(0,l.jsx)(a.iz,{onClick:()=>t("angular_standalone"),children:"Angular Standalone"}),(0,l.jsx)(a.iz,{onClick:()=>t("react"),children:"React"}),(0,l.jsx)(a.iz,{onClick:()=>t("vue"),children:"Vue"}),(0,l.jsx)(a.iz,{onClick:()=>t("html"),children:"HTML"})]})]})}}}]);