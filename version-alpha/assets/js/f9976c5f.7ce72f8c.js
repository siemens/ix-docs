"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4584],{98205:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"components/forms-layout/guide","title":"Forms layout - Usage","description":"Form layout examples","source":"@site/docs/components/forms-layout/guide.md","sourceDirName":"components/forms-layout","slug":"/components/forms-layout/guide","permalink":"/version-alpha/docs/components/forms-layout/guide","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/forms-layout/guide.md","tags":[],"version":"current","frontMatter":{"doc-type":"tab-item"},"sidebar":"components","previous":{"title":"Forms layout","permalink":"/version-alpha/docs/components/forms-layout/"},"next":{"title":"Code","permalink":"/version-alpha/docs/components/forms-layout/code"}}');var s=n(65723),i=n(65598);const r={"doc-type":"tab-item"},l="Forms layout - Usage",a={},d=[{value:"Structuring a form",id:"structuring-a-form",level:2},{value:"Best practice",id:"best-practice",level:2},{value:"Related",id:"related",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"forms-layout---usage",children:"Forms layout - Usage"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"/version-alpha/figma/wEptRgAezDU1z80Cn3eZ0o_3046_516.png",alt:"Form layout examples"})}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Small form (modal)"}),"\n",(0,s.jsx)(t.li,{children:"Medium form"}),"\n",(0,s.jsx)(t.li,{children:"Big form (page)"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"structuring-a-form",children:"Structuring a form"}),"\n",(0,s.jsx)(t.p,{children:"Effective ways to organize form elements enhance user comprehension and interaction within your forms:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Single-column layout:"})," Ideal for short forms with a few fields or small viewports."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Multi-column layout:"})," Suitable for long forms with multiple fields to save vertical space. Use a ",(0,s.jsx)(t.a,{href:"../layout-grid",children:"layout grid"})," or flexbox to align fields."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Tabbed layout:"})," Use ",(0,s.jsx)(t.a,{href:"../tabs",children:"tabs"})," to break up long forms into manageable sections. This helps users focus on one part of the form at a time."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Stepped layout:"})," Use our workflow pattern to guide users through multi-step forms."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Fieldset:"})," Group related fields together using fieldsets. This helps users understand the context of the information they are providing. Add a legend (title) to describe the field group."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Section heading:"})," Use section headings to break up long forms into manageable sections. This helps users focus on one part of the form at a time."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Blind:"})," Use a ",(0,s.jsx)(t.a,{href:"../blind",children:"blind"})," to hide optional fields and reveal them when the user selects a specific option."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"best-practice",children:"Best practice"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Z and F shape pattern:"})," Follow natural reading patterns, for example left to right, to guide users through the form. Consider a clear order of fields to ensure users don\u2019t forget to fill in fields and improve data quality."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Button alignment:"})," Position primary action buttons, e.g. submit and cancel consistently. We recommend: - Bottom left: Short forms (up to 5 fields) - Bottom right: Long forms (more than 5 fields) - Bottom right and sticky: Long forms that are already filled in (e.g. edit) with a large number of fields\n%% - Top right: ??? %%"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Label alignment:"})," By default, the label is positioned above its input field. Use a custom field component for long forms with a lot of fields to position the label on the left (which saves vertical space)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Grouping fields:"})," In some cases, it makes sense to combine multiple fields in one ",(0,s.jsx)(t.a,{href:"../custom-field",children:"custom field"})," with a single label that are connected contextually or through validation, e.g. entering the value and unit of an entity, selecting start and end date. It allows a clearer validation, e.g. the end date must be after the start date."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Field width:"})," Use a consistent width for input fields to create a harmonious layout. For example, use a width of 100% for full-width fields and 50% for two-column fields.\n%% - ",(0,s.jsx)(t.strong,{children:"Responsive behavior"}),": xxx - Layout grid or flexbox - should I use 1 or 2 columns? %%"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"related",children:"Related"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"../forms-validation",children:"Validation"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"../forms-behavior",children:"Behavior"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},65598:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(22155);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);