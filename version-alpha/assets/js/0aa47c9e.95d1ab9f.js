"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2773],{7396:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>ge,contentTitle:()=>de,default:()=>xe,frontMatter:()=>ue,metadata:()=>r,toc:()=>fe});const r=JSON.parse('{"id":"components/gauge-chart/index","title":"Gauge chart","description":"Gauge charts are a type of chart that displays data using a dial or needle to indicate a value within a specific range. Gauge charts are commonly used to visualize performance metrics, such as speedometers, progress meters, and other KPIs. We typically use gauge charts to represent a single value within a range of values.","source":"@site/docs/components/gauge-chart/index.mdx","sourceDirName":"components/gauge-chart","slug":"/components/gauge-chart/","permalink":"/version-alpha/docs/components/gauge-chart/","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/gauge-chart/index.mdx","tags":[],"version":"current","frontMatter":{"doc-type":"banner","description":"Gauge charts are a type of chart that displays data using a dial or needle to indicate a value within a specific range. Gauge charts are commonly used to visualize performance metrics, such as speedometers, progress meters, and other KPIs. We typically use gauge charts to represent a single value within a range of values.","title":"Gauge chart","deprecated":null},"sidebar":"components","previous":{"title":"Bar chart","permalink":"/version-alpha/docs/components/bar-chart/"},"next":{"title":"Pie chart","permalink":"/version-alpha/docs/components/pie-chart/"}}');var s=t(65723),o=t(65598),a=t(70533);function c(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-gauge.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsGauge() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const value = 45.3;\n\n  function getGaugeColor(value: number) {\n    if (value > 60) return getComputedCSSProperty('color-success');\n    else if (value > 25) return getComputedCSSProperty('color-warning');\n    else {\n      return getComputedCSSProperty('color-alarm');\n    }\n  }\n\n  const options: EChartsOption = {\n    series: [\n      {\n        id: '1',\n        type: 'gauge',\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 18,\n            color: [[1, getComputedCSSProperty('color-neutral-40')]],\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n        radius: '75%',\n        center: ['50%', '60%'],\n        startAngle: 180,\n        endAngle: 0,\n        splitNumber: 1,\n        splitLine: {\n          show: true,\n        },\n        axisLabel: {\n          show: true,\n          distance: 30,\n          fontSize: 16,\n        },\n        progress: {\n          show: true,\n          overlap: false,\n          width: 35,\n          itemStyle: {\n            borderMiterLimit: 16,\n            color: getGaugeColor(value),\n          },\n        },\n        pointer: {\n          show: false,\n        },\n        data: [\n          {\n            value: value,\n            title: {\n              show: false,\n            },\n            detail: {\n              show: true,\n              offsetCenter: [0, -70],\n              overflow: 'break',\n              fontSize: '1.5rem',\n              width: 250,\n              lineHeight: 35,\n              color: getComputedCSSProperty('color-soft-text'),\n              formatter: '{value}Mbps \\nNetwork Speed',\n            },\n            pointer: {\n              show: false,\n            },\n          },\n        ],\n      },\n      {\n        id: '2',\n        type: 'gauge',\n        splitLine: {\n          show: false,\n        },\n        axisTick: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 5,\n            color: [\n              [0.25, getComputedCSSProperty('color-alarm')],\n              [0.6, getComputedCSSProperty('color-warning')],\n              [1, getComputedCSSProperty('color-success')],\n            ],\n          },\n        },\n        radius: '80%',\n        center: ['50%', '60%'],\n        startAngle: 180,\n        endAngle: 0,\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}function l(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}function p(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-gauge.html',\n  styleUrls: ['./echarts-gauge.css'],\n})\nexport default class EchartsGauge implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  value = 45.3;\n\n  private getGaugeColor(value: number) {\n    if (value > 60) return getComputedCSSProperty('color-success');\n    else if (value > 25) return getComputedCSSProperty('color-warning');\n    else {\n      return getComputedCSSProperty('color-alarm');\n    }\n  }\n\n  options: EChartsOption = {\n    series: [\n      {\n        id: '1',\n        type: 'gauge',\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 18,\n            color: [[1, getComputedCSSProperty('color-neutral-40')]],\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n        radius: '75%',\n        center: ['50%', '60%'],\n        startAngle: 180,\n        endAngle: 0,\n        splitNumber: 1,\n        splitLine: {\n          show: true,\n        },\n        axisLabel: {\n          show: true,\n          distance: 30,\n          fontSize: 16,\n        },\n        progress: {\n          show: true,\n          overlap: false,\n          width: 35,\n          itemStyle: {\n            borderMiterLimit: 16,\n            color: this.getGaugeColor(this.value),\n          },\n        },\n        pointer: {\n          show: false,\n        },\n        data: [\n          {\n            value: this.value,\n            title: {\n              show: false,\n            },\n            detail: {\n              show: true,\n              offsetCenter: [0, -70],\n              overflow: 'break',\n              fontSize: '1.5rem',\n              width: 250,\n              lineHeight: 35,\n              color: getComputedCSSProperty('color-soft-text'),\n              formatter: '{value}Mbps \\nNetwork Speed',\n            },\n            pointer: {\n              show: false,\n            },\n          },\n        ],\n      },\n      {\n        id: '2',\n        type: 'gauge',\n        splitLine: {\n          show: false,\n        },\n        axisTick: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 5,\n            color: [\n              [0.25, getComputedCSSProperty('color-alarm')],\n              [0.6, getComputedCSSProperty('color-warning')],\n              [1, getComputedCSSProperty('color-success')],\n            ],\n          },\n        },\n        radius: '80%',\n        center: ['50%', '60%'],\n        startAngle: 180,\n        endAngle: 0,\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function u(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}function g(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function w(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.GaugeChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst value = 45.3;\n\nfunction getGaugeColor(value: number) {\n  if (value > 60) return getComputedCSSProperty('color-success');\n  else if (value > 25) return getComputedCSSProperty('color-warning');\n  else {\n    return getComputedCSSProperty('color-alarm');\n  }\n}\n\nconst options: EChartsOption = {\n  series: [\n    {\n      id: '1',\n      type: 'gauge',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 18,\n          color: [[1, getComputedCSSProperty('color-neutral-40')]],\n        },\n      },\n      axisTick: {\n        show: false,\n      },\n      radius: '75%',\n      center: ['50%', '60%'],\n      startAngle: 180,\n      endAngle: 0,\n      splitNumber: 1,\n      splitLine: {\n        show: true,\n      },\n      axisLabel: {\n        show: true,\n        distance: 30,\n        fontSize: 16,\n      },\n      progress: {\n        show: true,\n        overlap: false,\n        width: 35,\n        itemStyle: {\n          borderMiterLimit: 16,\n          color: getGaugeColor(value),\n        },\n      },\n      pointer: {\n        show: false,\n      },\n      data: [\n        {\n          value: value,\n          title: {\n            show: false,\n          },\n          detail: {\n            show: true,\n            offsetCenter: [0, -70],\n            overflow: 'break',\n            fontSize: '1.5rem',\n            width: 250,\n            lineHeight: 35,\n            color: getComputedCSSProperty('color-soft-text'),\n            formatter: '{value}Mbps \\nNetwork Speed',\n          },\n          pointer: {\n            show: false,\n          },\n        },\n      ],\n    },\n    {\n      id: '2',\n      type: 'gauge',\n      splitLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n      },\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 5,\n          color: [\n            [0.25, getComputedCSSProperty('color-alarm')],\n            [0.6, getComputedCSSProperty('color-warning')],\n            [1, getComputedCSSProperty('color-success')],\n          ],\n        },\n      },\n      radius: '80%',\n      center: ['50%', '60%'],\n      startAngle: 180,\n      endAngle: 0,\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-gauge.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(w,{...e})}):w(e)}function y(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function C(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(y,{...e})}):y(e)}function v(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts gauge example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-gauge.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import {\n        registerTheme,\n        getComputedCSSProperty,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme, {\n          renderer: 'svg',\n        });\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      let dates = [];\n      for (let year = 2013; year < 2025; year++) {\n        dates.push(year.toString());\n      }\n\n      let value = 45.3;\n\n      function getGaugeColor(value) {\n        if (value > 60) return getComputedCSSProperty('color-success');\n        else if (value > 25) return getComputedCSSProperty('color-warning');\n        else {\n          return getComputedCSSProperty('color-alarm');\n        }\n      }\n\n      const options = {\n        series: [\n          {\n            id: '1',\n            type: 'gauge',\n            axisLine: {\n              show: true,\n              lineStyle: {\n                width: 18,\n                color: [[1, getComputedCSSProperty('color-neutral-40')]],\n              },\n            },\n            axisTick: {\n              show: false,\n            },\n            radius: '75%',\n            center: ['50%', '60%'],\n            startAngle: 180,\n            endAngle: 0,\n            splitNumber: 1,\n            splitLine: {\n              show: true,\n            },\n            axisLabel: {\n              show: true,\n              distance: 30,\n              fontSize: 16,\n            },\n            progress: {\n              show: true,\n              overlap: false,\n              width: 35,\n              itemStyle: {\n                borderMiterLimit: 16,\n                color: getGaugeColor(value),\n              },\n            },\n            pointer: {\n              show: false,\n            },\n            data: [\n              {\n                value: value,\n                title: {\n                  show: false,\n                },\n                detail: {\n                  show: true,\n                  offsetCenter: [0, -70],\n                  overflow: 'break',\n                  fontSize: '1.5rem',\n                  width: 250,\n                  lineHeight: 35,\n                  color: getComputedCSSProperty('color-soft-text'),\n                  formatter: '{value}Mbps \\nNetwork Speed',\n                },\n                pointer: {\n                  show: false,\n                },\n              },\n            ],\n          },\n          {\n            id: '2',\n            type: 'gauge',\n            splitLine: {\n              show: false,\n            },\n            axisTick: {\n              show: false,\n            },\n            axisLabel: {\n              show: false,\n            },\n            axisLine: {\n              show: true,\n              lineStyle: {\n                width: 5,\n                color: [\n                  [0.25, getComputedCSSProperty('color-alarm')],\n                  [0.6, getComputedCSSProperty('color-warning')],\n                  [1, getComputedCSSProperty('color-success')],\n                ],\n              },\n            },\n            radius: '80%',\n            center: ['50%', '60%'],\n            startAngle: 180,\n            endAngle: 0,\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function S(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}function j(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function b(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}function E(e){return(0,s.jsx)(a.A,{name:"echarts-gauge",source:{react:{"echarts-gauge.tsx":i,"echarts-gauge.scoped.css":h},angular:{"echarts-gauge.ts":m,"echarts-gauge.html":d,"echarts-gauge.css":f},vue:{"echarts-gauge.vue":x,"echarts-gauge.css":C},html:{"echarts-gauge.html":S,"echarts-gauge.css":b}},files:{react:{"echarts-gauge.tsx":"react/echarts-gauge.tsx","echarts-gauge.scoped.css":"react/echarts-gauge.scoped.css"},angular:{"echarts-gauge.ts":"angular/echarts-gauge.ts","echarts-gauge.html":"angular/echarts-gauge.html","echarts-gauge.css":"angular/echarts-gauge.css"},vue:{"echarts-gauge.vue":"vue/echarts-gauge.vue","echarts-gauge.css":"vue/echarts-gauge.css"},html:{"echarts-gauge.html":"html/echarts-gauge.html","echarts-gauge.css":"html/echarts-gauge.css"}},height:e.height,onlyFramework:e.onlyFramework})}function k(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}function P(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-progress-circle.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsGauge() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const value = 60;\n\n  const options: EChartsOption = {\n    series: [\n      {\n        id: '1',\n        type: 'gauge',\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 15,\n            color: [[1, getComputedCSSProperty('color-neutral-40')]],\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n        radius: '100%',\n        startAngle: 90,\n        endAngle: -270,\n        splitLine: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        progress: {\n          show: true,\n          overlap: false,\n          width: 35,\n          itemStyle: {\n            borderMiterLimit: 16,\n            color: getComputedCSSProperty('color-success'),\n          },\n        },\n        pointer: {\n          show: false,\n        },\n        data: [\n          {\n            value: value,\n            detail: {\n              offsetCenter: [0, 0],\n              fontSize: '2rem',\n              fontWeight: 'normal',\n              color: getComputedCSSProperty('color-soft-text'),\n              rich: {\n                valueStyle: {\n                  fontSize: '2rem',\n                  color: getComputedCSSProperty('color-soft-text'),\n                  fontWeight: 'bold',\n                },\n                textStyle: {\n                  fontSize: '1.5rem',\n                  color: getComputedCSSProperty('color-soft-text'),\n                },\n              },\n              formatter: `{valueStyle|{value}}/100\\n{textStyle|completed}`,\n            },\n            pointer: {\n              show: false,\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts-gauge\"\n    />\n  );\n}\n"})})}function T(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}function A(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function _(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(A,{...e})}):A(e)}function N(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-progress-circle.html',\n  styleUrls: ['./echarts-progress-circle.css'],\n})\nexport default class EchartsProgressCircle implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  value = 60;\n\n  options: EChartsOption = {\n    series: [\n      {\n        id: '1',\n        type: 'gauge',\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 15,\n            color: [[1, getComputedCSSProperty('color-neutral-40')]],\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n        radius: '100%',\n        startAngle: 90,\n        endAngle: -270,\n        splitLine: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        progress: {\n          show: true,\n          overlap: false,\n          width: 35,\n          itemStyle: {\n            borderMiterLimit: 16,\n            color: getComputedCSSProperty('color-success'),\n          },\n        },\n        pointer: {\n          show: false,\n        },\n        data: [\n          {\n            value: this.value,\n            detail: {\n              offsetCenter: [0, 0],\n              fontSize: '2rem',\n              fontWeight: 'normal',\n              color: getComputedCSSProperty('color-soft-text'),\n              rich: {\n                valueStyle: {\n                  fontSize: '2rem',\n                  color: getComputedCSSProperty('color-soft-text'),\n                  fontWeight: 'bold',\n                },\n                textStyle: {\n                  fontSize: '1.5rem',\n                  color: getComputedCSSProperty('color-soft-text'),\n                },\n              },\n              formatter: `{valueStyle|{value}}/100\\n{textStyle|completed}`,\n            },\n            pointer: {\n              show: false,\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function L(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}function R(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts-gauge"\n></div>\n'})})}function $(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}function O(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function z(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(O,{...e})}):O(e)}function F(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.GaugeChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst value = 60;\n\nconst options: EChartsOption = {\n  series: [\n    {\n      id: '1',\n      type: 'gauge',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 15,\n          color: [[1, getComputedCSSProperty('color-neutral-40')]],\n        },\n      },\n      axisTick: {\n        show: false,\n      },\n      radius: '100%',\n      startAngle: 90,\n      endAngle: -270,\n      splitLine: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n      },\n      progress: {\n        show: true,\n        overlap: false,\n        width: 35,\n        itemStyle: {\n          borderMiterLimit: 16,\n          color: getComputedCSSProperty('color-success'),\n        },\n      },\n      pointer: {\n        show: false,\n      },\n      data: [\n        {\n          value: value,\n          detail: {\n            offsetCenter: [0, 0],\n            fontSize: '2rem',\n            fontWeight: 'normal',\n            color: getComputedCSSProperty('color-soft-text'),\n            rich: {\n              valueStyle: {\n                fontSize: '2rem',\n                color: getComputedCSSProperty('color-soft-text'),\n                fontWeight: 'bold',\n              },\n              textStyle: {\n                fontSize: '1.5rem',\n                color: getComputedCSSProperty('color-soft-text'),\n              },\n            },\n            formatter: `{valueStyle|{value}}/100\\n{textStyle|completed}`,\n          },\n          pointer: {\n            show: false,\n          },\n        },\n      ],\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-progress-circle.css\"></style>\n\n<template>\n  <VueECharts\n    :theme=\"theme\"\n    :option=\"options\"\n    autoresize\n    class=\"echarts-gauge\"\n  ></VueECharts>\n</template>\n"})})}function I(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(F,{...e})}):F(e)}function M(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function D(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(M,{...e})}):M(e)}function G(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts progress circle example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-progress-circle.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts-gauge\"></div>\n\n    <script type=\"module\">\n      import {\n        getComputedCSSProperty,\n        registerTheme,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const value = 68;\n\n      const options = {\n        series: [\n          {\n            id: '1',\n            type: 'gauge',\n            axisLine: {\n              show: true,\n              lineStyle: {\n                width: 15,\n                color: [[1, getComputedCSSProperty('color-neutral-40')]],\n              },\n            },\n            axisTick: {\n              show: false,\n            },\n            radius: '100%',\n            startAngle: 90,\n            endAngle: -270,\n            splitLine: {\n              show: false,\n            },\n            axisLabel: {\n              show: false,\n            },\n            progress: {\n              show: true,\n              overlap: false,\n              width: 35,\n              itemStyle: {\n                borderMiterLimit: 16,\n                color: getComputedCSSProperty('color-success'),\n              },\n            },\n            pointer: {\n              show: false,\n            },\n            data: [\n              {\n                value: value,\n                detail: {\n                  offsetCenter: [0, 0],\n                  fontSize: '2rem',\n                  fontWeight: 'normal',\n                  color: getComputedCSSProperty('color-soft-text'),\n                  rich: {\n                    valueStyle: {\n                      fontSize: '2rem',\n                      color: getComputedCSSProperty('color-soft-text'),\n                      fontWeight: 'bold',\n                    },\n                    textStyle: {\n                      fontSize: '1.5rem',\n                      color: getComputedCSSProperty('color-soft-text'),\n                    },\n                  },\n                  formatter: `{valueStyle|{value}}/100\\n{textStyle|completed}`,\n                },\n                pointer: {\n                  show: false,\n                },\n              },\n            ],\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function U(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(G,{...e})}):G(e)}function V(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function W(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(V,{...e})}):V(e)}function q(e){return(0,s.jsx)(a.A,{name:"echarts-progress-circle",source:{react:{"echarts-progress-circle.tsx":T,"echarts-progress-circle.scoped.css":_},angular:{"echarts-progress-circle.ts":L,"echarts-progress-circle.html":$,"echarts-progress-circle.css":z},vue:{"echarts-progress-circle.vue":I,"echarts-progress-circle.css":D},html:{"echarts-progress-circle.html":U,"echarts-progress-circle.css":W}},files:{react:{"echarts-progress-circle.tsx":"react/echarts-progress-circle.tsx","echarts-progress-circle.scoped.css":"react/echarts-progress-circle.scoped.css"},angular:{"echarts-progress-circle.ts":"angular/echarts-progress-circle.ts","echarts-progress-circle.html":"angular/echarts-progress-circle.html","echarts-progress-circle.css":"angular/echarts-progress-circle.css"},vue:{"echarts-progress-circle.vue":"vue/echarts-progress-circle.vue","echarts-progress-circle.css":"vue/echarts-progress-circle.css"},html:{"echarts-progress-circle.html":"html/echarts-progress-circle.html","echarts-progress-circle.css":"html/echarts-progress-circle.css"}},height:e.height,onlyFramework:e.onlyFramework})}function H(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(q,{...e})}):q(e)}function B(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-progress-arc.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsProgressArc() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const value = 60;\n\n  const options: EChartsOption = {\n    series: [\n      {\n        id: '1',\n        type: 'gauge',\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 15,\n            color: [[1, getComputedCSSProperty('color-neutral-40')]],\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n        radius: '100%',\n        startAngle: 200,\n        endAngle: -20,\n        splitLine: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        progress: {\n          show: true,\n          overlap: false,\n          width: 35,\n          itemStyle: {\n            borderMiterLimit: 16,\n            color: getComputedCSSProperty('color-success'),\n          },\n        },\n        pointer: {\n          show: false,\n        },\n        data: [\n          {\n            value: value,\n            detail: {\n              offsetCenter: [0, 0],\n              overflow: 'break',\n              fontSize: '2rem',\n              fontWeight: 'normal',\n              color: getComputedCSSProperty('color-soft-text'),\n              width: 250,\n              lineHeight: 35,\n              formatter: '{value} / 100 \\n completed',\n            },\n            pointer: {\n              show: false,\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts-gauge\"\n    />\n  );\n}\n"})})}function K(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(B,{...e})}):B(e)}function J(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function Y(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(J,{...e})}):J(e)}function X(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-progress-arc.html',\n  styleUrls: ['./echarts-progress-arc.css'],\n})\nexport default class EchartsProgressArc implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  value = 60;\n\n  options: EChartsOption = {\n    series: [\n      {\n        id: '1',\n        type: 'gauge',\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 15,\n            color: [[1, getComputedCSSProperty('color-neutral-40')]],\n          },\n        },\n        axisTick: {\n          show: false,\n        },\n        radius: '100%',\n        startAngle: 200,\n        endAngle: -20,\n        splitLine: {\n          show: false,\n        },\n        axisLabel: {\n          show: false,\n        },\n        progress: {\n          show: true,\n          overlap: false,\n          width: 35,\n          itemStyle: {\n            borderMiterLimit: 16,\n            color: getComputedCSSProperty('color-success'),\n          },\n        },\n        pointer: {\n          show: false,\n        },\n        data: [\n          {\n            value: this.value,\n            detail: {\n              offsetCenter: [0, 0],\n              overflow: 'break',\n              fontSize: '2rem',\n              fontWeight: 'normal',\n              color: getComputedCSSProperty('color-soft-text'),\n              width: 250,\n              lineHeight: 35,\n              formatter: '{value} / 100 \\n completed',\n            },\n            pointer: {\n              show: false,\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function Z(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(X,{...e})}):X(e)}function Q(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts-gauge"\n></div>\n'})})}function ee(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(Q,{...e})}):Q(e)}function ne(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function te(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ne,{...e})}):ne(e)}function re(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.GaugeChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst value = 60;\n\nconst options = {\n  series: [\n    {\n      id: '1',\n      type: 'gauge',\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 15,\n          color: [[1, getComputedCSSProperty('color-neutral-40')]],\n        },\n      },\n      axisTick: {\n        show: false,\n      },\n      radius: '100%',\n      startAngle: 200,\n      endAngle: -20,\n      splitLine: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n      },\n      progress: {\n        show: true,\n        overlap: false,\n        width: 35,\n        itemStyle: {\n          borderMiterLimit: 16,\n          color: getComputedCSSProperty('color-success'),\n        },\n      },\n      pointer: {\n        show: false,\n      },\n      data: [\n        {\n          value: value,\n          detail: {\n            offsetCenter: [0, 0],\n            overflow: 'break',\n            fontSize: '2rem',\n            fontWeight: 'normal',\n            color: getComputedCSSProperty('color-soft-text'),\n            width: 250,\n            lineHeight: 35,\n            formatter: '{value} / 100 \\n completed',\n          },\n          pointer: {\n            show: false,\n          },\n        },\n      ],\n    } as EChartsOption,\n  ],\n};\n<\/script>\n\n<style scoped src=\"./echarts-progress-arc.css\"></style>\n\n<template>\n  <VueECharts\n    :theme=\"theme\"\n    :option=\"options\"\n    autoresize\n    class=\"echarts-gauge\"\n  ></VueECharts>\n</template>\n"})})}function se(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(re,{...e})}):re(e)}function oe(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function ae(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(oe,{...e})}):oe(e)}function ce(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts progress arc example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-progress-arc.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts-gauge\"></div>\n\n    <script type=\"module\">\n      import {\n        getComputedCSSProperty,\n        registerTheme,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const value = 68;\n\n      const options = {\n        series: [\n          {\n            id: '1',\n            type: 'gauge',\n            axisLine: {\n              show: true,\n              lineStyle: {\n                width: 15,\n                color: [[1, getComputedCSSProperty('color-neutral-40')]],\n              },\n            },\n            axisTick: {\n              show: false,\n            },\n            radius: '100%',\n            startAngle: 200,\n            endAngle: -20,\n            splitLine: {\n              show: false,\n            },\n            axisLabel: {\n              show: false,\n            },\n            progress: {\n              show: true,\n              overlap: false,\n              width: 35,\n              itemStyle: {\n                borderMiterLimit: 16,\n                color: getComputedCSSProperty('color-success'),\n              },\n            },\n            pointer: {\n              show: false,\n            },\n            data: [\n              {\n                value: value,\n                detail: {\n                  offsetCenter: [0, 0],\n                  overflow: 'break',\n                  fontSize: '2rem',\n                  fontWeight: 'normal',\n                  color: getComputedCSSProperty('color-soft-text'),\n                  width: 250,\n                  lineHeight: 35,\n                  formatter: '{value} / 100 \\n completed',\n                },\n                pointer: {\n                  show: false,\n                },\n              },\n            ],\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function ie(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ce,{...e})}):ce(e)}function le(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts-gauge {\n  position: relative;\n  width: 100%;\n  height: 20rem;\n  padding-top: 3rem;\n}\n"})})}function he(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(le,{...e})}):le(e)}function pe(e){return(0,s.jsx)(a.A,{name:"echarts-progress-arc",source:{react:{"echarts-progress-arc.tsx":K,"echarts-progress-arc.scoped.css":Y},angular:{"echarts-progress-arc.ts":Z,"echarts-progress-arc.html":ee,"echarts-progress-arc.css":te},vue:{"echarts-progress-arc.vue":se,"echarts-progress-arc.css":ae},html:{"echarts-progress-arc.html":ie,"echarts-progress-arc.css":he}},files:{react:{"echarts-progress-arc.tsx":"react/echarts-progress-arc.tsx","echarts-progress-arc.scoped.css":"react/echarts-progress-arc.scoped.css"},angular:{"echarts-progress-arc.ts":"angular/echarts-progress-arc.ts","echarts-progress-arc.html":"angular/echarts-progress-arc.html","echarts-progress-arc.css":"angular/echarts-progress-arc.css"},vue:{"echarts-progress-arc.vue":"vue/echarts-progress-arc.vue","echarts-progress-arc.css":"vue/echarts-progress-arc.css"},html:{"echarts-progress-arc.html":"html/echarts-progress-arc.html","echarts-progress-arc.css":"html/echarts-progress-arc.css"}},height:e.height,onlyFramework:e.onlyFramework})}function me(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(pe,{...e})}):pe(e)}const ue={"doc-type":"banner",description:"Gauge charts are a type of chart that displays data using a dial or needle to indicate a value within a specific range. Gauge charts are commonly used to visualize performance metrics, such as speedometers, progress meters, and other KPIs. We typically use gauge charts to represent a single value within a range of values.",title:"Gauge chart",deprecated:null},de="Gauge chart - Code",ge={},fe=[{value:"Metric gauge charts",id:"metric-gauge-charts",level:2},{value:"Circle gauge charts",id:"circle-gauge-charts",level:2},{value:"Arc gauge charts",id:"arc-gauge-charts",level:2},{value:"Dos and Don&#39;ts",id:"dos-and-donts",level:2}];function we(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"gauge-chart---code",children:"Gauge chart - Code"})}),"\n",(0,s.jsx)(n.h2,{id:"metric-gauge-charts",children:"Metric gauge charts"}),"\n",(0,s.jsx)(n.p,{children:"Metrics gauge charts, also known as dial or speedometer charts, are an effective way to visualize key performance indicators (KPIs) and other metrics. These charts indicate the current value of a metric within a predefined range, often segmented into different zones, e.g. red for poor performance, green for good performance, etc."}),"\n",(0,s.jsx)(k,{height:"25rem"}),"\n",(0,s.jsx)(n.h2,{id:"circle-gauge-charts",children:"Circle gauge charts"}),"\n",(0,s.jsx)(n.p,{children:"Circle gauge charts, also known as radial progress charts or circular progress bars, are a visually appealing way to represent data and track progress towards a goal. These charts use a circle to display the percentage of completion, making it easy to quickly grasp the status of a project or task. The circle is typically filled in proportion to the progress made, with the center often displaying the percentage value."}),"\n",(0,s.jsx)(H,{height:"30rem"}),"\n",(0,s.jsx)(n.h2,{id:"arc-gauge-charts",children:"Arc gauge charts"}),"\n",(0,s.jsx)(n.p,{children:"Arc gauge charts, also known as semi-circular progress bars, are a dynamic way to visualize data and track progress. Unlike circle charts, arc gauge charts use a semi-circle or arc to represent the percentage of completion. This design can be particularly effective in dashboards and user interfaces where users need a clear and engaging visual representation but space is limited."}),"\n",(0,s.jsx)(me,{height:"30rem"}),"\n",(0,s.jsx)(n.h2,{id:"dos-and-donts",children:"Dos and Don'ts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Do keep it simple and easy to read, with a clear needle and well-defined ranges"}),"\n",(0,s.jsx)(n.li,{children:"Do use color coding, e.g. green for good, red for danger, etc. to indicate different ranges"}),"\n",(0,s.jsx)(n.li,{children:"Do label ranges and the needle value clearly to avoid confusion"}),"\n",(0,s.jsx)(n.li,{children:"Don\u2019t overcrowd the gauge with too many ranges or labels"}),"\n",(0,s.jsx)(n.li,{children:"Don\u2019t use gauge charts for visualizing complex data or large datasets"}),"\n",(0,s.jsx)(n.li,{children:"Don\u2019t use similar colors for adjacent ranges to avoid confusion"}),"\n"]})]})}function xe(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(we,{...e})}):we(e)}},36132:(e,n,t)=>{t.d(n,{A:()=>k});const r=["angular-cli","create-react-app","html","javascript","node","polymer","typescript","vue"],s=["project","search","ports","settings"],o=["light","dark"],a=["editor","preview"],c={clickToLoad:e=>l("ctl",e),devToolsHeight:e=>h("devtoolsheight",e),forceEmbedLayout:e=>l("embed",e),hideDevTools:e=>l("hidedevtools",e),hideExplorer:e=>l("hideExplorer",e),hideNavigation:e=>l("hideNavigation",e),openFile:e=>m("file",e),showSidebar:e=>function(e,n){if("boolean"==typeof n)return`${e}=${n?"1":"0"}`;return""}("showSidebar",e),sidebarView:e=>p("sidebarView",e,s),startScript:e=>m("startScript",e),terminalHeight:e=>h("terminalHeight",e),theme:e=>p("theme",e,o),view:e=>p("view",e,a),zenMode:e=>l("zenMode",e),organization:e=>`${m("orgName",e?.name)}&${m("orgProvider",e?.provider)}`,crossOriginIsolated:e=>l("corp",e)};function i(e={}){const n=Object.entries(e).map((([e,n])=>null!=n&&c.hasOwnProperty(e)?c[e](n):"")).filter(Boolean);return n.length?`?${n.join("&")}`:""}function l(e,n){return!0===n?`${e}=1`:""}function h(e,n){if("number"==typeof n&&!Number.isNaN(n)){const t=Math.min(100,Math.max(0,n));return`${e}=${encodeURIComponent(Math.round(t))}`}return""}function p(e,n="",t=[]){return t.includes(n)?`${e}=${encodeURIComponent(n)}`:""}function m(e,n){return(Array.isArray(n)?n:[n]).filter((e=>"string"==typeof e&&""!==e.trim())).map((n=>`${e}=${encodeURIComponent(n)}`)).join("&")}function u(){return Math.random().toString(36).slice(2,6)+Math.random().toString(36).slice(2,6)}function d(e,n){return`${f(n)}${e}${i(n)}`}function g(e,n){const t={forceEmbedLayout:!0};return n&&"object"==typeof n&&Object.assign(t,n),`${f(t)}${e}${i(t)}`}function f(e={}){return("string"==typeof e.origin?e.origin:"https://stackblitz.com").replace(/\/$/,"")}function w(e,n,t){if(!n||!e||!e.parentNode)throw new Error("Invalid Element");e.id&&(n.id=e.id),e.className&&(n.className=e.className),function(e,n={}){const t=Object.hasOwnProperty.call(n,"height")?`${n.height}`:"300",r=Object.hasOwnProperty.call(n,"width")?`${n.width}`:void 0;e.setAttribute("height",t),r?e.setAttribute("width",r):e.setAttribute("style","width:100%;")}(n,t),function(e,n,t={}){const r=e.allow?.split(";")?.map((e=>e.trim()))??[];t.crossOriginIsolated&&!r.includes("cross-origin-isolated")&&r.push("cross-origin-isolated");r.length>0&&(n.allow=r.join("; "))}(e,n,t),e.replaceWith(n)}function x(e){if("string"==typeof e){const n=document.getElementById(e);if(!n)throw new Error(`Could not find element with id '${e}'`);return n}if(e instanceof HTMLElement)return e;throw new Error(`Invalid element: ${e}`)}function y(e){return e&&!1===e.newWindow?"_self":"_blank"}class C{constructor(e){this.pending={},this.port=e,this.port.onmessage=this.messageListener.bind(this)}request({type:e,payload:n}){return new Promise(((t,r)=>{const s=u();this.pending[s]={resolve:t,reject:r},this.port.postMessage({type:e,payload:{...n,__reqid:s}})}))}messageListener(e){if("string"!=typeof e.data.payload?.__reqid)return;const{type:n,payload:t}=e.data,{__reqid:r,__success:s,__error:o}=t;this.pending[r]&&(s?this.pending[r].resolve(this.cleanResult(t)):this.pending[r].reject(o?`${n}: ${o}`:n),delete this.pending[r])}cleanResult(e){const n={...e};return delete n.__reqid,delete n.__success,delete n.__error,Object.keys(n).length?n:null}}class v{constructor(e,n){this.editor={openFile:e=>this._rdc.request({type:"SDK_OPEN_FILE",payload:{path:e}}),setCurrentFile:e=>this._rdc.request({type:"SDK_SET_CURRENT_FILE",payload:{path:e}}),setTheme:e=>this._rdc.request({type:"SDK_SET_UI_THEME",payload:{theme:e}}),setView:e=>this._rdc.request({type:"SDK_SET_UI_VIEW",payload:{view:e}}),showSidebar:(e=!0)=>this._rdc.request({type:"SDK_TOGGLE_SIDEBAR",payload:{visible:e}})},this.preview={origin:"",getUrl:()=>this._rdc.request({type:"SDK_GET_PREVIEW_URL",payload:{}}).then((e=>e?.url??null)),setUrl:(e="/")=>{if("string"!=typeof e||!e.startsWith("/"))throw new Error(`Invalid argument: expected a path starting with '/', got '${e}'`);return this._rdc.request({type:"SDK_SET_PREVIEW_URL",payload:{path:e}})}},this._rdc=new C(e),Object.defineProperty(this.preview,"origin",{value:"string"==typeof n.previewOrigin?n.previewOrigin:null,writable:!1})}applyFsDiff(e){const n=e=>null!==e&&"object"==typeof e;if(!n(e)||!n(e.create))throw new Error("Invalid diff object: expected diff.create to be an object.");if(!Array.isArray(e.destroy))throw new Error("Invalid diff object: expected diff.destroy to be an array.");return this._rdc.request({type:"SDK_APPLY_FS_DIFF",payload:e})}getDependencies(){return this._rdc.request({type:"SDK_GET_DEPS_SNAPSHOT",payload:{}})}getFsSnapshot(){return this._rdc.request({type:"SDK_GET_FS_SNAPSHOT",payload:{}})}}const S=[];class j{constructor(e){this.id=u(),this.element=e,this.pending=new Promise(((e,n)=>{const t=({data:n,ports:t})=>{"SDK_INIT_SUCCESS"===n?.action&&n.id===this.id&&(this.vm=new v(t[0],n.payload),e(this.vm),s())},r=()=>{this.element.contentWindow?.postMessage({action:"SDK_INIT",id:this.id},"*")};function s(){window.clearInterval(a),window.removeEventListener("message",t)}window.addEventListener("message",t),r();let o=0;const a=window.setInterval((()=>{if(this.vm)s();else{if(o>=20)return s(),n("Timeout: Unable to establish a connection with the StackBlitz VM"),void S.forEach(((e,n)=>{e.id===this.id&&S.splice(n,1)}));o++,r()}}),500)})),S.push(this)}}function b({template:e,title:n,description:t,dependencies:s,files:o,settings:a}){if(!r.includes(e)){const e=r.map((e=>`'${e}'`)).join(", ");console.warn(`Unsupported project.template: must be one of ${e}`)}const c=[],i=(e,n,t="")=>{c.push(function(e,n){const t=document.createElement("input");return t.type="hidden",t.name=e,t.value=n,t}(e,"string"==typeof n?n:t))};i("project[title]",n),"string"==typeof t&&t.length>0&&i("project[description]",t),i("project[template]",e,"javascript"),s&&("node"===e?console.warn("Invalid project.dependencies: dependencies must be provided as a 'package.json' file when using the 'node' template."):i("project[dependencies]",JSON.stringify(s))),a&&i("project[settings]",JSON.stringify(a)),Object.entries(o).forEach((([e,n])=>{i(`project[files][${function(e){return e.replace(/\[/g,"%5B").replace(/\]/g,"%5D")}(e)}]`,n)}));const l=document.createElement("form");return l.method="POST",l.setAttribute("style","display:none!important;"),l.append(...c),l}function E(e){if(!e?.contentWindow)return Promise.reject("Provided element is not an iframe.");return((e=>{const n=e instanceof Element?"element":"id";return S.find((t=>t[n]===e))??null})(e)??new j(e)).pending}const k={connect:E,embedGithubProject:function(e,n,t){const r=x(e),s=document.createElement("iframe");return s.src=g(`/github/${n}`,t),w(r,s,t),E(s)},embedProject:function(e,n,t){const r=x(e),s=function(e,n){const t=b(e);return t.action=g("/run",n),t.id="sb_run",`<!doctype html>\n<html>\n<head><title></title></head>\n<body>\n  ${t.outerHTML}\n  <script>document.getElementById('${t.id}').submit();<\/script>\n</body>\n</html>`}(n,t),o=document.createElement("iframe");return w(r,o,t),o.contentDocument?.write(s),E(o)},embedProjectId:function(e,n,t){const r=x(e),s=document.createElement("iframe");return s.src=g(`/edit/${n}`,t),w(r,s,t),E(s)},openGithubProject:function(e,n){const t=d(`/github/${e}`,n),r=y(n);window.open(t,r)},openProject:function(e,n){!function(e,n){const t=b(e);t.action=d("/run",n),t.target=y(n),document.body.appendChild(t),t.submit(),document.body.removeChild(t)}(e,n)},openProjectId:function(e,n){const t=d(`/edit/${e}`,n),r=y(n);window.open(t,r)}}},70533:(e,n,t)=>{t.d(n,{A:()=>O});var r=t(60116),s=t(95130),o=t(49415),a=t(71192),c=t(70851),i=t(22155),l=t(17124),h=t(62104);const p={CodePreview:"CodePreview_qXsk",sourceFileName:"sourceFileName_EMBm",toolbar:"toolbar_rOKU",code:"code_RYOk"};var m=t(65723);function u(e){const{selectedFramework:n}=e,[t,r]=(0,i.useState)(""),[o,c]=(0,i.useState)((()=>()=>(0,m.jsx)(a.A,{children:"Test"}))),u=(0,i.useRef)(null);return(0,i.useEffect)((()=>{if(e.files?.[n]){const t=Object.keys(e.files[n])[0];r(t),c((()=>e.source[n][t]))}}),[n]),(0,i.useEffect)((()=>{e.onShowSource(o)}),[o]),(0,m.jsx)("div",{className:p.CodePreview,children:e.source?.[n]&&(0,m.jsxs)(m.Fragment,{children:[(0,m.jsxs)(h.A,{ref:u,className:p.sourceFileButton,children:[(0,m.jsx)("span",{className:p.sourceFileName,children:t}),i.createElement("ix-icon",{name:s.mvO,size:"16"})]}),u.current&&(0,m.jsx)(l.$9,{trigger:u.current,children:Object.keys(e.source[n]).map((s=>(0,m.jsx)(l.iz,{checked:t===s,onClick:()=>{r(s),c((()=>e.source[n][s]))},children:s},s)))})]})})}var d=t(94744),g=t(3516);async function f(e,n){void 0===n&&(n=!0);const t=await fetch(e);if(!t.ok)throw`Error fetching code from ${e}`;const r=await t.text();if(!r||r?.includes('<div id="__docusaurus"></div>')||r?.includes("Page Not Found"))throw`Error fetching code from ${e}`;return n?r.replace(/\/\*[^]*?\*\//gs,"").replace(/<!--[^]*?-->/gs,"").trim():r}var w=t(36132);function x(e,n,t,r){!function(e,n){const t=e["package.json"];e["package.json"]=t.replace(/\"<VERSION>\"/g,`"${n}"`)}(n,r),w.A.openProject({title:`iX ${(0,g.x)(e)} Example`,template:"node",description:`iX ${e} playground`,files:n},{openFile:t})}async function y(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/App.vue","src/env.d.ts","src/main.ts","index.html","package.json","tsconfig.json","vite.config.ts"].map((async t=>{const r=await f(`${e}code-runtime/vue/${t}`);n[t]=r}));await Promise.all(t);const r=await f(`${e}/vue/global.css`);return n["src/styles/global.css"]=r,n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const o=`import ${(0,g.x)(t)} from './${t}.vue';`;return s["src/App.vue"]=s["src/App.vue"].replace("import Example from './Example.vue';",o),s["src/App.vue"]=s["src/App.vue"].replace("<Example />",`<${(0,g.x)(t)} />`),s}(e,n,t);x("vue",s,`${t}.vue`,r)}async function C(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/main.js","package.json","vite.config.ts"].map((async t=>{const r=await f(`${e}code-runtime/html/${t}`);n[t]=r}));await Promise.all(t),n["src/init.js"]=n["src/main.js"],delete n["src/main.js"];const r=await f(`${e}/html/global.css`);return n["src/styles/global.css"]=r,n}(e),s={...r},o=n[`${t}.html`];return s["src/index.html"]=o,Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]})),delete s[`src/${t}.html`],s}(e,n,t);x("html",s,"src/index.html",r)}async function v(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["src/app/app.module.ts","src/app/app.component.ts","src/app/app.component.html","src/index.html","src/main.ts","tsconfig.json","tsconfig.app.json","angular.json","package.json"].map((async t=>{const r=await f(`${e}code-runtime/angular/${t}`);n[t]=r}));await Promise.all(t);const r=await f(`${e}/angular/global.css`);return n["src/styles.css"]=r,n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const o=function(e,n){const t=/@Component\(/;return Object.keys(e).filter((r=>r.endsWith(".ts")&&r!==`${n}.ts`&&t.test(e[r]))).map((e=>e.replace(".ts","")))}(n,t),a=o.map((e=>`import ${(0,g.x)(e)} from './../${e}';`)).join("\n");s["src/app/app.module.ts"]=s["src/app/app.module.ts"].replace("import ExampleComponent from './example.component';",[`import ${(0,g.x)(t)} from './../${t}';`,a].join("\n"));const c=o.map((e=>(0,g.x)(e))).join(", ");return s["src/app/app.module.ts"]=s["src/app/app.module.ts"].replace("declarations: [AppComponent, ExampleComponent],",`declarations: [AppComponent, ${(0,g.x)(t)}, ${c}],`),s}(e,n,t);x("angular",s,`src/${t}.ts`,r)}async function S(e,n,t,r){const s=await async function(e,n,t){const r=await async function(e){const n={},t=["vite.config.ts","tsconfig.node.json","tsconfig.json","package.json","index.html","src/App.tsx","src/main.tsx","src/vite-env.d.ts"].map((async t=>{const r=await f(`${e}code-runtime/react/${t}`);n[t]=r}));await Promise.all(t);const r=await f(`${e}/react/global.css`);return n["src/styles/global.css"]=r,n}(e),s={...r};Object.keys(n).forEach((e=>{s[`src/${e.replace("./","")}`]=n[e]}));const o=`import ${(0,g.x)(t)} from './${t}';`;return s["src/App.tsx"]=s["src/App.tsx"].replace("import Example from './Example';",o),s["src/App.tsx"]=s["src/App.tsx"].replace("<Example />",`<${(0,g.x)(t)} />`),s}(e,n,t);x("react",s,`src/${t}.tsx`,r)}var j=t(16773);function b(e){const n=(0,r.Ay)("/demo/v2/");return(0,m.jsx)(j.A,{children:()=>(0,m.jsxs)(h.A,{onClick:()=>{!async function(e){let{baseUrl:n,name:t,framework:r,sourcePath:s,version:o}=e;const a=o||"latest",c={};await Promise.all(Object.keys(s).map((async e=>{c[e]=await f(`${n}/${s[e]}`)}))),"react"===r?S(n,c,t,a):"angular"===r?v(n,c,t,a):"html"===r?C(n,c,t,a):"vue"===r&&y(n,c,t,a)}({baseUrl:n,framework:e.framework,name:e.mount,sourcePath:e.files,version:"latest"})},children:[i.createElement("ix-icon",{name:s.Ymj,size:"16"}),(0,m.jsx)("span",{className:"ButtonText",children:"Open Stackblitz"})]})})}const E={pill:"pill_UrZt",pill__active:"pill__active_n11m"};function k(e){let{children:n,active:t,onClick:r}=e;return(0,m.jsx)("button",{onClick:r,className:(0,c.A)("all-unset",E.pill,{[E.pill__active]:t}),children:n})}var P=t(70934),T=t(57280);const A={playground:"playground_GmEd",openExternal:"openExternal_DsHn",toolbar:"toolbar_EsJG",preview:"preview_jEFK",code:"code_wC2A",toolbar__actions:"toolbar__actions_bull",spacer:"spacer_C_ki",iframe:"iframe_SPmo",toolbar__right:"toolbar__right_sFNj"};var _=t(93434);const N=e=>{let{children:n}=e;const{theme:t,variant:r}=(0,i.useContext)(_.J),s=(0,i.useRef)(null);return(0,i.useEffect)((()=>{const e=s.current;e&&("brand"===t?(e.classList.remove("color-table-classic-dark"),e.classList.remove("color-table-classic-light"),e.setAttribute("data-ix-theme","brand"),e.setAttribute("data-ix-variant",r)):(e.removeAttribute("data-ix-theme"),e.removeAttribute("data-ix-variant"),e.className=`color-table-${t}-${r}`))}),[t,r]),(0,m.jsx)("div",{ref:s,children:n})};function L(e){return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsxs)("a",{href:e.openExternalUrl,target:"_blank",className:(0,c.A)("flex gap-1 text-[var(--theme-color-soft-text)] flex-nowrap text-nowrap pr-2",A.openExternal),children:[i.createElement("ix-icon",{name:s.B7e,size:"16"}),(0,m.jsx)("span",{className:"ButtonText",children:"Full preview"})]}),(0,m.jsx)(P.Ay,{onThemeChange:e.onChangeTheme}),(0,m.jsx)(T.A,{})]})}function R(e){return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)("div",{className:"DesktopOnly",children:(0,m.jsx)(b,{framework:e.framework,files:e.files,mount:e.mount})}),!e.hideFrameworkSelection&&(0,m.jsx)(d.A,{onFrameworkChange:e.onFrameworkChange})]})}function $(e){const n=(0,P.wM)(),{playgroundThemeVariant:t}=(0,o.z)(),[s,l]=(0,i.useState)("dark"===t),[h,p]=(0,i.useState)(!e.noPreview),[d,g]=(0,i.useState)(n),f=(0,r.Ay)(`/demo/v2/preview/html/preview-examples/${e.name}.html?no-margin=true&theme=theme-${d}-${s?"dark":"light"}`),[w,x]=(0,i.useState)(e.onlyFramework??"angular"),[y,C]=(0,i.useState)((()=>()=>(0,m.jsx)(a.A,{children:"Nothing to see here \ud83e\udd78"})));return(0,i.useEffect)((()=>{l("dark"===t)}),[t]),(0,m.jsxs)("div",{className:A.playground,children:[(0,m.jsxs)("div",{className:A.toolbar,children:[!e.noPreview&&(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(k,{onClick:()=>p(!0),active:h,children:"Preview"}),(0,m.jsx)(k,{onClick:()=>p(!1),active:!h,children:"Code"}),(0,m.jsx)("div",{className:A.spacer})]}),(0,m.jsxs)("div",{className:A.toolbar__right,children:[!h&&(0,m.jsx)(u,{selectedFramework:w,name:e.name,files:e.files,source:e.source,onShowSource:e=>{C((()=>e))}}),(0,m.jsx)("div",{className:A.toolbar__actions,children:h?(0,m.jsx)(L,{openExternalUrl:f,onChangeTheme:g}):(0,m.jsx)(R,{mount:e.name,hideFrameworkSelection:!!e.onlyFramework,onFrameworkChange:x,framework:w,files:e.files[w]})})]})]}),(0,m.jsx)("div",{className:(0,c.A)(A.preview,{[A.code]:h}),style:{"--preview-height":e.height},children:h?(0,m.jsx)("iframe",{title:`Preview for ${e.name}`,src:f,className:A.iframe}):(0,m.jsx)(y,{})})]})}function O(e){return(0,m.jsx)(j.A,{children:()=>(0,m.jsx)(N,{children:(0,m.jsx)($,{...e})})})}},62104:(e,n,t)=>{t.d(n,{A:()=>i});var r=t(22155);const s="Button_k5HP",o="ButtonText_kD4P";var a=t(70851),c=t(65723);const i=(0,r.forwardRef)(((e,n)=>{let{children:t,onClick:r,className:i}=e;return(0,c.jsx)("button",{className:(0,a.A)("all-unset",s,i),onClick:r,ref:n,children:(0,c.jsx)("div",{className:(0,a.A)(o,"ButtonText"),children:t})})}))},94744:(e,n,t)=>{t.d(n,{A:()=>h});var r=t(16773),s=t(95130),o=t(17124),a=t(6451),c=t(22155),i=t(62104),l=t(65723);function h(e){return(0,l.jsx)(r.A,{children:()=>(0,l.jsx)(p,{...e})})}function p(e){const{framework:n,setFramework:t}=(0,a.u)(),[r,h]=(0,c.useState)(null);return(0,c.useEffect)((()=>{e.onFrameworkChange&&e.onFrameworkChange(n)}),[n]),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(i.A,{ref:h,className:"dropdown-button",children:[c.createElement("ix-icon",{name:s.NCo,size:"16"}),(0,l.jsx)("span",{className:"ButtonText",children:(0,a.F)(n)}),c.createElement("ix-icon",{name:s.mvO,size:"16"})]}),r&&(0,l.jsxs)(o.$9,{trigger:r,children:[(0,l.jsx)(o.iz,{onClick:()=>t("angular"),children:"Angular"}),(0,l.jsx)(o.iz,{onClick:()=>t("react"),children:"React"}),(0,l.jsx)(o.iz,{onClick:()=>t("vue"),children:"Vue"}),(0,l.jsx)(o.iz,{onClick:()=>t("html"),children:"HTML"})]})]})}},70934:(e,n,t)=>{t.d(n,{Ay:()=>w,wM:()=>g});var r=t(16773),s=t(88407),o=t(95130),a=t(17124),c=t(49415),i=t(22155),l=t(62104);const h="DropdownItem_L91h";var p=t(65723);const m="brand",u="classic";function d(e){return e.charAt(0).toUpperCase()+e.slice(1)}function g(){return(0,s.A)().siteConfig.customFields.withBrandTheme?m:u}function f(e){const{playgroundTheme:n,setPlaygroundTheme:t}=(0,c.A)(),r=(0,s.A)(),[g]=(0,i.useState)((()=>{const e=[u];return r.siteConfig.customFields.withBrandTheme&&e.push(m),e})),[f,w]=(0,i.useState)(null),x=d(n);return(0,i.useEffect)((()=>{e.onThemeChange?.(n)}),[n]),(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)(l.A,{ref:w,className:"dropdown-button",children:[i.createElement("ix-icon",{name:o.LEH,size:"16"}),(0,p.jsx)("span",{className:"ButtonText",children:x}),i.createElement("ix-icon",{name:o.mvO,size:"16"})]}),f&&(0,p.jsx)(a.$9,{trigger:f,children:g.map((e=>(0,p.jsx)(a.iz,{onClick:()=>t(e),className:h,checked:n===e,children:d(e)},e)))})]})}const w=e=>(0,p.jsx)(r.A,{children:()=>(0,p.jsx)(f,{...e})})},57280:(e,n,t)=>{t.d(n,{A:()=>h});var r=t(95130),s=t(22155),o=t(62104),a=t(49415),c=t(16773),i=t(65723);function l(){const{playgroundThemeVariant:e,setPlaygroundThemeVariant:n}=(0,a.z)();return(0,i.jsxs)(o.A,{onClick:()=>{n("light"===e?"dark":"light")},children:[s.createElement("ix-icon",{name:"light"===e?r.q35:r.fDS,size:"16"}),(0,i.jsx)("span",{className:"ButtonText",children:"light"===e?"Light":"Dark"})]})}const h=()=>(0,i.jsx)(c.A,{children:()=>(0,i.jsx)(l,{})})},6451:(e,n,t)=>{t.d(n,{F:()=>s,u:()=>o});var r=t(22155);const s=e=>{switch(e){case"angular":return"Angular";case"react":return"React";case"vue":return"Vue";case"html":return"HTML"}},o=()=>{const[e,n]=function(e,n){const[t,s]=(0,r.useState)((()=>{try{const t=window.localStorage.getItem(e);return t?JSON.parse(t):n}catch(t){return console.error(t),n}}));return(0,r.useEffect)((()=>{const n=n=>{if(n.key===e){const e=n.newValue?JSON.parse(n.newValue):void 0;s(e)}};return window.addEventListener("storage",n),()=>{window.removeEventListener("storage",n)}}),[e]),[t,n=>{try{const r=n instanceof Function?n(t):n;s(r),window.localStorage.setItem(e,JSON.stringify(r)),window.dispatchEvent(new StorageEvent("storage",{key:e,newValue:JSON.stringify(r)}))}catch(r){console.error(r)}},!!window.localStorage.getItem(e)]}("docusaurus.code.framework","angular");return{framework:e,setFramework:n}}},49415:(e,n,t)=>{t.d(n,{A:()=>o,z:()=>a});var r=t(22155),s=t(93434);const o=()=>{const e=(0,r.useContext)(s.J);return{playgroundTheme:e.theme,setPlaygroundTheme:n=>e.onThemeChange?.(n)}},a=()=>{const e=(0,r.useContext)(s.J);return{playgroundThemeVariant:e.variant,setPlaygroundThemeVariant:n=>e.onVariantChange?.(n)}}},3516:(e,n,t)=>{function r(e){const n=e.split("-").map(((e,n)=>0===n?e.toLowerCase():e.charAt(0).toUpperCase()+e.slice(1).toLowerCase())).join("");return n.charAt(0).toUpperCase()+n.slice(1)}function s(e,n){if(void 0===n&&(n=!1),!e)return e;return e[0].toUpperCase()+(n?e.slice(1):e.slice(1).toLowerCase())}t.d(n,{Z:()=>s,x:()=>r})}}]);